// Copyright 2022 The DLRover Authors. All rights reserved.
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// source: dlrover/proto/brain.proto

package proto

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type MetricsType int32

const (
	MetricsType_Training_Hyper_Params MetricsType = 0
	MetricsType_Workflow_Feature      MetricsType = 1
	MetricsType_Training_Set_Feature  MetricsType = 2
	MetricsType_Model_Feature         MetricsType = 3
	MetricsType_Runtime_Info          MetricsType = 4
	MetricsType_Job_Exit_Reason       MetricsType = 5
	MetricsType_Optimization_Result   MetricsType = 6
	MetricsType_Type                  MetricsType = 7
	MetricsType_Resource              MetricsType = 8
	MetricsType_Customized_Data       MetricsType = 9
	MetricsType_Optimization          MetricsType = 10
)

var MetricsType_name = map[int32]string{
	0:  "Training_Hyper_Params",
	1:  "Workflow_Feature",
	2:  "Training_Set_Feature",
	3:  "Model_Feature",
	4:  "Runtime_Info",
	5:  "Job_Exit_Reason",
	6:  "Optimization_Result",
	7:  "Type",
	8:  "Resource",
	9:  "Customized_Data",
	10: "Optimization",
}

var MetricsType_value = map[string]int32{
	"Training_Hyper_Params": 0,
	"Workflow_Feature":      1,
	"Training_Set_Feature":  2,
	"Model_Feature":         3,
	"Runtime_Info":          4,
	"Job_Exit_Reason":       5,
	"Optimization_Result":   6,
	"Type":                  7,
	"Resource":              8,
	"Customized_Data":       9,
	"Optimization":          10,
}

func (x MetricsType) String() string {
	return proto.EnumName(MetricsType_name, int32(x))
}

func (MetricsType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_deb8c207265d2700, []int{0}
}

type TrainingHyperParams struct {
	BatchSize            int64    `protobuf:"varint,1,opt,name=batch_size,json=batchSize,proto3" json:"batch_size,omitempty"`
	Epoch                int64    `protobuf:"varint,2,opt,name=epoch,proto3" json:"epoch,omitempty"`
	MaxSteps             int64    `protobuf:"varint,3,opt,name=max_steps,json=maxSteps,proto3" json:"max_steps,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TrainingHyperParams) Reset()         { *m = TrainingHyperParams{} }
func (m *TrainingHyperParams) String() string { return proto.CompactTextString(m) }
func (*TrainingHyperParams) ProtoMessage()    {}
func (*TrainingHyperParams) Descriptor() ([]byte, []int) {
	return fileDescriptor_deb8c207265d2700, []int{0}
}

func (m *TrainingHyperParams) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TrainingHyperParams.Unmarshal(m, b)
}
func (m *TrainingHyperParams) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TrainingHyperParams.Marshal(b, m, deterministic)
}
func (m *TrainingHyperParams) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TrainingHyperParams.Merge(m, src)
}
func (m *TrainingHyperParams) XXX_Size() int {
	return xxx_messageInfo_TrainingHyperParams.Size(m)
}
func (m *TrainingHyperParams) XXX_DiscardUnknown() {
	xxx_messageInfo_TrainingHyperParams.DiscardUnknown(m)
}

var xxx_messageInfo_TrainingHyperParams proto.InternalMessageInfo

func (m *TrainingHyperParams) GetBatchSize() int64 {
	if m != nil {
		return m.BatchSize
	}
	return 0
}

func (m *TrainingHyperParams) GetEpoch() int64 {
	if m != nil {
		return m.Epoch
	}
	return 0
}

func (m *TrainingHyperParams) GetMaxSteps() int64 {
	if m != nil {
		return m.MaxSteps
	}
	return 0
}

type WorkflowFeature struct {
	JobName              string   `protobuf:"bytes,1,opt,name=job_name,json=jobName,proto3" json:"job_name,omitempty"`
	UserId               string   `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	CodeAddress          string   `protobuf:"bytes,3,opt,name=code_address,json=codeAddress,proto3" json:"code_address,omitempty"`
	WorkflowId           string   `protobuf:"bytes,4,opt,name=workflow_id,json=workflowId,proto3" json:"workflow_id,omitempty"`
	NodeId               string   `protobuf:"bytes,5,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	OdpsProject          string   `protobuf:"bytes,6,opt,name=odps_project,json=odpsProject,proto3" json:"odps_project,omitempty"`
	IsProd               bool     `protobuf:"varint,7,opt,name=is_prod,json=isProd,proto3" json:"is_prod,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WorkflowFeature) Reset()         { *m = WorkflowFeature{} }
func (m *WorkflowFeature) String() string { return proto.CompactTextString(m) }
func (*WorkflowFeature) ProtoMessage()    {}
func (*WorkflowFeature) Descriptor() ([]byte, []int) {
	return fileDescriptor_deb8c207265d2700, []int{1}
}

func (m *WorkflowFeature) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WorkflowFeature.Unmarshal(m, b)
}
func (m *WorkflowFeature) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WorkflowFeature.Marshal(b, m, deterministic)
}
func (m *WorkflowFeature) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WorkflowFeature.Merge(m, src)
}
func (m *WorkflowFeature) XXX_Size() int {
	return xxx_messageInfo_WorkflowFeature.Size(m)
}
func (m *WorkflowFeature) XXX_DiscardUnknown() {
	xxx_messageInfo_WorkflowFeature.DiscardUnknown(m)
}

var xxx_messageInfo_WorkflowFeature proto.InternalMessageInfo

func (m *WorkflowFeature) GetJobName() string {
	if m != nil {
		return m.JobName
	}
	return ""
}

func (m *WorkflowFeature) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *WorkflowFeature) GetCodeAddress() string {
	if m != nil {
		return m.CodeAddress
	}
	return ""
}

func (m *WorkflowFeature) GetWorkflowId() string {
	if m != nil {
		return m.WorkflowId
	}
	return ""
}

func (m *WorkflowFeature) GetNodeId() string {
	if m != nil {
		return m.NodeId
	}
	return ""
}

func (m *WorkflowFeature) GetOdpsProject() string {
	if m != nil {
		return m.OdpsProject
	}
	return ""
}

func (m *WorkflowFeature) GetIsProd() bool {
	if m != nil {
		return m.IsProd
	}
	return false
}

type TrainingSetFeature struct {
	DatasetSize          int64    `protobuf:"varint,1,opt,name=dataset_size,json=datasetSize,proto3" json:"dataset_size,omitempty"`
	DatasetName          string   `protobuf:"bytes,2,opt,name=dataset_name,json=datasetName,proto3" json:"dataset_name,omitempty"`
	SparseItemCount      int64    `protobuf:"varint,3,opt,name=sparse_item_count,json=sparseItemCount,proto3" json:"sparse_item_count,omitempty"`
	SparseFeatures       string   `protobuf:"bytes,4,opt,name=sparse_features,json=sparseFeatures,proto3" json:"sparse_features,omitempty"`
	SparseFeatureGroups  string   `protobuf:"bytes,5,opt,name=sparse_feature_groups,json=sparseFeatureGroups,proto3" json:"sparse_feature_groups,omitempty"`
	SparseFeatureShapes  string   `protobuf:"bytes,6,opt,name=sparse_feature_shapes,json=sparseFeatureShapes,proto3" json:"sparse_feature_shapes,omitempty"`
	DenseFeatures        string   `protobuf:"bytes,7,opt,name=dense_features,json=denseFeatures,proto3" json:"dense_features,omitempty"`
	DenseFeatureShapes   string   `protobuf:"bytes,8,opt,name=dense_feature_shapes,json=denseFeatureShapes,proto3" json:"dense_feature_shapes,omitempty"`
	StorageSize          int64    `protobuf:"varint,9,opt,name=storage_size,json=storageSize,proto3" json:"storage_size,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TrainingSetFeature) Reset()         { *m = TrainingSetFeature{} }
func (m *TrainingSetFeature) String() string { return proto.CompactTextString(m) }
func (*TrainingSetFeature) ProtoMessage()    {}
func (*TrainingSetFeature) Descriptor() ([]byte, []int) {
	return fileDescriptor_deb8c207265d2700, []int{2}
}

func (m *TrainingSetFeature) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TrainingSetFeature.Unmarshal(m, b)
}
func (m *TrainingSetFeature) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TrainingSetFeature.Marshal(b, m, deterministic)
}
func (m *TrainingSetFeature) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TrainingSetFeature.Merge(m, src)
}
func (m *TrainingSetFeature) XXX_Size() int {
	return xxx_messageInfo_TrainingSetFeature.Size(m)
}
func (m *TrainingSetFeature) XXX_DiscardUnknown() {
	xxx_messageInfo_TrainingSetFeature.DiscardUnknown(m)
}

var xxx_messageInfo_TrainingSetFeature proto.InternalMessageInfo

func (m *TrainingSetFeature) GetDatasetSize() int64 {
	if m != nil {
		return m.DatasetSize
	}
	return 0
}

func (m *TrainingSetFeature) GetDatasetName() string {
	if m != nil {
		return m.DatasetName
	}
	return ""
}

func (m *TrainingSetFeature) GetSparseItemCount() int64 {
	if m != nil {
		return m.SparseItemCount
	}
	return 0
}

func (m *TrainingSetFeature) GetSparseFeatures() string {
	if m != nil {
		return m.SparseFeatures
	}
	return ""
}

func (m *TrainingSetFeature) GetSparseFeatureGroups() string {
	if m != nil {
		return m.SparseFeatureGroups
	}
	return ""
}

func (m *TrainingSetFeature) GetSparseFeatureShapes() string {
	if m != nil {
		return m.SparseFeatureShapes
	}
	return ""
}

func (m *TrainingSetFeature) GetDenseFeatures() string {
	if m != nil {
		return m.DenseFeatures
	}
	return ""
}

func (m *TrainingSetFeature) GetDenseFeatureShapes() string {
	if m != nil {
		return m.DenseFeatureShapes
	}
	return ""
}

func (m *TrainingSetFeature) GetStorageSize() int64 {
	if m != nil {
		return m.StorageSize
	}
	return 0
}

type ModelFeature struct {
	VariableCount        int64            `protobuf:"varint,1,opt,name=variable_count,json=variableCount,proto3" json:"variable_count,omitempty"`
	OpCount              int64            `protobuf:"varint,2,opt,name=op_count,json=opCount,proto3" json:"op_count,omitempty"`
	EmbeddingDimension   int64            `protobuf:"varint,3,opt,name=embedding_dimension,json=embeddingDimension,proto3" json:"embedding_dimension,omitempty"`
	TotalVariableSize    int64            `protobuf:"varint,4,opt,name=total_variable_size,json=totalVariableSize,proto3" json:"total_variable_size,omitempty"`
	MaxVariableSize      int64            `protobuf:"varint,5,opt,name=max_variable_size,json=maxVariableSize,proto3" json:"max_variable_size,omitempty"`
	UpdateOpCount        int64            `protobuf:"varint,6,opt,name=update_op_count,json=updateOpCount,proto3" json:"update_op_count,omitempty"`
	ReadOpCount          int64            `protobuf:"varint,7,opt,name=read_op_count,json=readOpCount,proto3" json:"read_op_count,omitempty"`
	InputFetchDur        int64            `protobuf:"varint,8,opt,name=input_fetch_dur,json=inputFetchDur,proto3" json:"input_fetch_dur,omitempty"`
	Flops                int64            `protobuf:"varint,9,opt,name=flops,proto3" json:"flops,omitempty"`
	RecvOpCount          int64            `protobuf:"varint,10,opt,name=recv_op_count,json=recvOpCount,proto3" json:"recv_op_count,omitempty"`
	KvEmbeddingDims      []int64          `protobuf:"varint,11,rep,packed,name=kv_embedding_dims,json=kvEmbeddingDims,proto3" json:"kv_embedding_dims,omitempty"`
	TensorAllocBytes     map[string]int64 `protobuf:"bytes,12,rep,name=tensor_alloc_bytes,json=tensorAllocBytes,proto3" json:"tensor_alloc_bytes,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *ModelFeature) Reset()         { *m = ModelFeature{} }
func (m *ModelFeature) String() string { return proto.CompactTextString(m) }
func (*ModelFeature) ProtoMessage()    {}
func (*ModelFeature) Descriptor() ([]byte, []int) {
	return fileDescriptor_deb8c207265d2700, []int{3}
}

func (m *ModelFeature) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ModelFeature.Unmarshal(m, b)
}
func (m *ModelFeature) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ModelFeature.Marshal(b, m, deterministic)
}
func (m *ModelFeature) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ModelFeature.Merge(m, src)
}
func (m *ModelFeature) XXX_Size() int {
	return xxx_messageInfo_ModelFeature.Size(m)
}
func (m *ModelFeature) XXX_DiscardUnknown() {
	xxx_messageInfo_ModelFeature.DiscardUnknown(m)
}

var xxx_messageInfo_ModelFeature proto.InternalMessageInfo

func (m *ModelFeature) GetVariableCount() int64 {
	if m != nil {
		return m.VariableCount
	}
	return 0
}

func (m *ModelFeature) GetOpCount() int64 {
	if m != nil {
		return m.OpCount
	}
	return 0
}

func (m *ModelFeature) GetEmbeddingDimension() int64 {
	if m != nil {
		return m.EmbeddingDimension
	}
	return 0
}

func (m *ModelFeature) GetTotalVariableSize() int64 {
	if m != nil {
		return m.TotalVariableSize
	}
	return 0
}

func (m *ModelFeature) GetMaxVariableSize() int64 {
	if m != nil {
		return m.MaxVariableSize
	}
	return 0
}

func (m *ModelFeature) GetUpdateOpCount() int64 {
	if m != nil {
		return m.UpdateOpCount
	}
	return 0
}

func (m *ModelFeature) GetReadOpCount() int64 {
	if m != nil {
		return m.ReadOpCount
	}
	return 0
}

func (m *ModelFeature) GetInputFetchDur() int64 {
	if m != nil {
		return m.InputFetchDur
	}
	return 0
}

func (m *ModelFeature) GetFlops() int64 {
	if m != nil {
		return m.Flops
	}
	return 0
}

func (m *ModelFeature) GetRecvOpCount() int64 {
	if m != nil {
		return m.RecvOpCount
	}
	return 0
}

func (m *ModelFeature) GetKvEmbeddingDims() []int64 {
	if m != nil {
		return m.KvEmbeddingDims
	}
	return nil
}

func (m *ModelFeature) GetTensorAllocBytes() map[string]int64 {
	if m != nil {
		return m.TensorAllocBytes
	}
	return nil
}

type RuntimeInfo struct {
	GlobalStep           int64      `protobuf:"varint,1,opt,name=global_step,json=globalStep,proto3" json:"global_step,omitempty"`
	RunningPods          []*PodMeta `protobuf:"bytes,2,rep,name=running_pods,json=runningPods,proto3" json:"running_pods,omitempty"`
	TimeStamp            int64      `protobuf:"varint,3,opt,name=time_stamp,json=timeStamp,proto3" json:"time_stamp,omitempty"`
	Speed                float32    `protobuf:"fixed32,4,opt,name=speed,proto3" json:"speed,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *RuntimeInfo) Reset()         { *m = RuntimeInfo{} }
func (m *RuntimeInfo) String() string { return proto.CompactTextString(m) }
func (*RuntimeInfo) ProtoMessage()    {}
func (*RuntimeInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_deb8c207265d2700, []int{4}
}

func (m *RuntimeInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RuntimeInfo.Unmarshal(m, b)
}
func (m *RuntimeInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RuntimeInfo.Marshal(b, m, deterministic)
}
func (m *RuntimeInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RuntimeInfo.Merge(m, src)
}
func (m *RuntimeInfo) XXX_Size() int {
	return xxx_messageInfo_RuntimeInfo.Size(m)
}
func (m *RuntimeInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_RuntimeInfo.DiscardUnknown(m)
}

var xxx_messageInfo_RuntimeInfo proto.InternalMessageInfo

func (m *RuntimeInfo) GetGlobalStep() int64 {
	if m != nil {
		return m.GlobalStep
	}
	return 0
}

func (m *RuntimeInfo) GetRunningPods() []*PodMeta {
	if m != nil {
		return m.RunningPods
	}
	return nil
}

func (m *RuntimeInfo) GetTimeStamp() int64 {
	if m != nil {
		return m.TimeStamp
	}
	return 0
}

func (m *RuntimeInfo) GetSpeed() float32 {
	if m != nil {
		return m.Speed
	}
	return 0
}

type PodMeta struct {
	PodName              string   `protobuf:"bytes,1,opt,name=pod_name,json=podName,proto3" json:"pod_name,omitempty"`
	PodIp                string   `protobuf:"bytes,2,opt,name=pod_ip,json=podIp,proto3" json:"pod_ip,omitempty"`
	NodeIp               string   `protobuf:"bytes,3,opt,name=node_ip,json=nodeIp,proto3" json:"node_ip,omitempty"`
	HostName             string   `protobuf:"bytes,4,opt,name=host_name,json=hostName,proto3" json:"host_name,omitempty"`
	Namespace            string   `protobuf:"bytes,5,opt,name=namespace,proto3" json:"namespace,omitempty"`
	IsMixed              bool     `protobuf:"varint,6,opt,name=is_mixed,json=isMixed,proto3" json:"is_mixed,omitempty"`
	MemUsage             float64  `protobuf:"fixed64,7,opt,name=mem_usage,json=memUsage,proto3" json:"mem_usage,omitempty"`
	CpuUsage             float64  `protobuf:"fixed64,8,opt,name=cpu_usage,json=cpuUsage,proto3" json:"cpu_usage,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PodMeta) Reset()         { *m = PodMeta{} }
func (m *PodMeta) String() string { return proto.CompactTextString(m) }
func (*PodMeta) ProtoMessage()    {}
func (*PodMeta) Descriptor() ([]byte, []int) {
	return fileDescriptor_deb8c207265d2700, []int{5}
}

func (m *PodMeta) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PodMeta.Unmarshal(m, b)
}
func (m *PodMeta) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PodMeta.Marshal(b, m, deterministic)
}
func (m *PodMeta) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PodMeta.Merge(m, src)
}
func (m *PodMeta) XXX_Size() int {
	return xxx_messageInfo_PodMeta.Size(m)
}
func (m *PodMeta) XXX_DiscardUnknown() {
	xxx_messageInfo_PodMeta.DiscardUnknown(m)
}

var xxx_messageInfo_PodMeta proto.InternalMessageInfo

func (m *PodMeta) GetPodName() string {
	if m != nil {
		return m.PodName
	}
	return ""
}

func (m *PodMeta) GetPodIp() string {
	if m != nil {
		return m.PodIp
	}
	return ""
}

func (m *PodMeta) GetNodeIp() string {
	if m != nil {
		return m.NodeIp
	}
	return ""
}

func (m *PodMeta) GetHostName() string {
	if m != nil {
		return m.HostName
	}
	return ""
}

func (m *PodMeta) GetNamespace() string {
	if m != nil {
		return m.Namespace
	}
	return ""
}

func (m *PodMeta) GetIsMixed() bool {
	if m != nil {
		return m.IsMixed
	}
	return false
}

func (m *PodMeta) GetMemUsage() float64 {
	if m != nil {
		return m.MemUsage
	}
	return 0
}

func (m *PodMeta) GetCpuUsage() float64 {
	if m != nil {
		return m.CpuUsage
	}
	return 0
}

type JobMeta struct {
	Uuid                 string   `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	User                 string   `protobuf:"bytes,3,opt,name=user,proto3" json:"user,omitempty"`
	Cluster              string   `protobuf:"bytes,4,opt,name=cluster,proto3" json:"cluster,omitempty"`
	Namespace            string   `protobuf:"bytes,5,opt,name=namespace,proto3" json:"namespace,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *JobMeta) Reset()         { *m = JobMeta{} }
func (m *JobMeta) String() string { return proto.CompactTextString(m) }
func (*JobMeta) ProtoMessage()    {}
func (*JobMeta) Descriptor() ([]byte, []int) {
	return fileDescriptor_deb8c207265d2700, []int{6}
}

func (m *JobMeta) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_JobMeta.Unmarshal(m, b)
}
func (m *JobMeta) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_JobMeta.Marshal(b, m, deterministic)
}
func (m *JobMeta) XXX_Merge(src proto.Message) {
	xxx_messageInfo_JobMeta.Merge(m, src)
}
func (m *JobMeta) XXX_Size() int {
	return xxx_messageInfo_JobMeta.Size(m)
}
func (m *JobMeta) XXX_DiscardUnknown() {
	xxx_messageInfo_JobMeta.DiscardUnknown(m)
}

var xxx_messageInfo_JobMeta proto.InternalMessageInfo

func (m *JobMeta) GetUuid() string {
	if m != nil {
		return m.Uuid
	}
	return ""
}

func (m *JobMeta) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *JobMeta) GetUser() string {
	if m != nil {
		return m.User
	}
	return ""
}

func (m *JobMeta) GetCluster() string {
	if m != nil {
		return m.Cluster
	}
	return ""
}

func (m *JobMeta) GetNamespace() string {
	if m != nil {
		return m.Namespace
	}
	return ""
}

type JobMetrics struct {
	DataStore   string      `protobuf:"bytes,1,opt,name=data_store,json=dataStore,proto3" json:"data_store,omitempty"`
	JobMeta     *JobMeta    `protobuf:"bytes,2,opt,name=job_meta,json=jobMeta,proto3" json:"job_meta,omitempty"`
	MetricsType MetricsType `protobuf:"varint,3,opt,name=metrics_type,json=metricsType,proto3,enum=proto.MetricsType" json:"metrics_type,omitempty"`
	// Types that are valid to be assigned to Metrics:
	//	*JobMetrics_TrainingHyperParams
	//	*JobMetrics_WorkflowFeature
	//	*JobMetrics_TrainingSetFeature
	//	*JobMetrics_ModelFeature
	//	*JobMetrics_RuntimeInfo
	//	*JobMetrics_JobExitReason
	//	*JobMetrics_ExtraInfo
	//	*JobMetrics_Type
	//	*JobMetrics_Resource
	//	*JobMetrics_CustomizedData
	//	*JobMetrics_JobOptimization
	Metrics              isJobMetrics_Metrics `protobuf_oneof:"metrics"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *JobMetrics) Reset()         { *m = JobMetrics{} }
func (m *JobMetrics) String() string { return proto.CompactTextString(m) }
func (*JobMetrics) ProtoMessage()    {}
func (*JobMetrics) Descriptor() ([]byte, []int) {
	return fileDescriptor_deb8c207265d2700, []int{7}
}

func (m *JobMetrics) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_JobMetrics.Unmarshal(m, b)
}
func (m *JobMetrics) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_JobMetrics.Marshal(b, m, deterministic)
}
func (m *JobMetrics) XXX_Merge(src proto.Message) {
	xxx_messageInfo_JobMetrics.Merge(m, src)
}
func (m *JobMetrics) XXX_Size() int {
	return xxx_messageInfo_JobMetrics.Size(m)
}
func (m *JobMetrics) XXX_DiscardUnknown() {
	xxx_messageInfo_JobMetrics.DiscardUnknown(m)
}

var xxx_messageInfo_JobMetrics proto.InternalMessageInfo

func (m *JobMetrics) GetDataStore() string {
	if m != nil {
		return m.DataStore
	}
	return ""
}

func (m *JobMetrics) GetJobMeta() *JobMeta {
	if m != nil {
		return m.JobMeta
	}
	return nil
}

func (m *JobMetrics) GetMetricsType() MetricsType {
	if m != nil {
		return m.MetricsType
	}
	return MetricsType_Training_Hyper_Params
}

type isJobMetrics_Metrics interface {
	isJobMetrics_Metrics()
}

type JobMetrics_TrainingHyperParams struct {
	TrainingHyperParams *TrainingHyperParams `protobuf:"bytes,4,opt,name=training_hyper_params,json=trainingHyperParams,proto3,oneof"`
}

type JobMetrics_WorkflowFeature struct {
	WorkflowFeature *WorkflowFeature `protobuf:"bytes,5,opt,name=workflow_feature,json=workflowFeature,proto3,oneof"`
}

type JobMetrics_TrainingSetFeature struct {
	TrainingSetFeature *TrainingSetFeature `protobuf:"bytes,6,opt,name=training_set_feature,json=trainingSetFeature,proto3,oneof"`
}

type JobMetrics_ModelFeature struct {
	ModelFeature *ModelFeature `protobuf:"bytes,7,opt,name=model_feature,json=modelFeature,proto3,oneof"`
}

type JobMetrics_RuntimeInfo struct {
	RuntimeInfo *RuntimeInfo `protobuf:"bytes,8,opt,name=runtime_info,json=runtimeInfo,proto3,oneof"`
}

type JobMetrics_JobExitReason struct {
	JobExitReason string `protobuf:"bytes,9,opt,name=job_exit_reason,json=jobExitReason,proto3,oneof"`
}

type JobMetrics_ExtraInfo struct {
	ExtraInfo string `protobuf:"bytes,10,opt,name=extra_info,json=extraInfo,proto3,oneof"`
}

type JobMetrics_Type struct {
	Type string `protobuf:"bytes,11,opt,name=type,proto3,oneof"`
}

type JobMetrics_Resource struct {
	Resource string `protobuf:"bytes,12,opt,name=resource,proto3,oneof"`
}

type JobMetrics_CustomizedData struct {
	CustomizedData string `protobuf:"bytes,13,opt,name=customized_data,json=customizedData,proto3,oneof"`
}

type JobMetrics_JobOptimization struct {
	JobOptimization *JobOptimization `protobuf:"bytes,14,opt,name=job_optimization,json=jobOptimization,proto3,oneof"`
}

func (*JobMetrics_TrainingHyperParams) isJobMetrics_Metrics() {}

func (*JobMetrics_WorkflowFeature) isJobMetrics_Metrics() {}

func (*JobMetrics_TrainingSetFeature) isJobMetrics_Metrics() {}

func (*JobMetrics_ModelFeature) isJobMetrics_Metrics() {}

func (*JobMetrics_RuntimeInfo) isJobMetrics_Metrics() {}

func (*JobMetrics_JobExitReason) isJobMetrics_Metrics() {}

func (*JobMetrics_ExtraInfo) isJobMetrics_Metrics() {}

func (*JobMetrics_Type) isJobMetrics_Metrics() {}

func (*JobMetrics_Resource) isJobMetrics_Metrics() {}

func (*JobMetrics_CustomizedData) isJobMetrics_Metrics() {}

func (*JobMetrics_JobOptimization) isJobMetrics_Metrics() {}

func (m *JobMetrics) GetMetrics() isJobMetrics_Metrics {
	if m != nil {
		return m.Metrics
	}
	return nil
}

func (m *JobMetrics) GetTrainingHyperParams() *TrainingHyperParams {
	if x, ok := m.GetMetrics().(*JobMetrics_TrainingHyperParams); ok {
		return x.TrainingHyperParams
	}
	return nil
}

func (m *JobMetrics) GetWorkflowFeature() *WorkflowFeature {
	if x, ok := m.GetMetrics().(*JobMetrics_WorkflowFeature); ok {
		return x.WorkflowFeature
	}
	return nil
}

func (m *JobMetrics) GetTrainingSetFeature() *TrainingSetFeature {
	if x, ok := m.GetMetrics().(*JobMetrics_TrainingSetFeature); ok {
		return x.TrainingSetFeature
	}
	return nil
}

func (m *JobMetrics) GetModelFeature() *ModelFeature {
	if x, ok := m.GetMetrics().(*JobMetrics_ModelFeature); ok {
		return x.ModelFeature
	}
	return nil
}

func (m *JobMetrics) GetRuntimeInfo() *RuntimeInfo {
	if x, ok := m.GetMetrics().(*JobMetrics_RuntimeInfo); ok {
		return x.RuntimeInfo
	}
	return nil
}

func (m *JobMetrics) GetJobExitReason() string {
	if x, ok := m.GetMetrics().(*JobMetrics_JobExitReason); ok {
		return x.JobExitReason
	}
	return ""
}

func (m *JobMetrics) GetExtraInfo() string {
	if x, ok := m.GetMetrics().(*JobMetrics_ExtraInfo); ok {
		return x.ExtraInfo
	}
	return ""
}

func (m *JobMetrics) GetType() string {
	if x, ok := m.GetMetrics().(*JobMetrics_Type); ok {
		return x.Type
	}
	return ""
}

func (m *JobMetrics) GetResource() string {
	if x, ok := m.GetMetrics().(*JobMetrics_Resource); ok {
		return x.Resource
	}
	return ""
}

func (m *JobMetrics) GetCustomizedData() string {
	if x, ok := m.GetMetrics().(*JobMetrics_CustomizedData); ok {
		return x.CustomizedData
	}
	return ""
}

func (m *JobMetrics) GetJobOptimization() *JobOptimization {
	if x, ok := m.GetMetrics().(*JobMetrics_JobOptimization); ok {
		return x.JobOptimization
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*JobMetrics) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*JobMetrics_TrainingHyperParams)(nil),
		(*JobMetrics_WorkflowFeature)(nil),
		(*JobMetrics_TrainingSetFeature)(nil),
		(*JobMetrics_ModelFeature)(nil),
		(*JobMetrics_RuntimeInfo)(nil),
		(*JobMetrics_JobExitReason)(nil),
		(*JobMetrics_ExtraInfo)(nil),
		(*JobMetrics_Type)(nil),
		(*JobMetrics_Resource)(nil),
		(*JobMetrics_CustomizedData)(nil),
		(*JobMetrics_JobOptimization)(nil),
	}
}

type OptimizeConfig struct {
	OptimizerConfigRetriever string            `protobuf:"bytes,1,opt,name=optimizer_config_retriever,json=optimizerConfigRetriever,proto3" json:"optimizer_config_retriever,omitempty"`
	DataStore                string            `protobuf:"bytes,2,opt,name=data_store,json=dataStore,proto3" json:"data_store,omitempty"`
	BrainProcessor           string            `protobuf:"bytes,3,opt,name=brain_processor,json=brainProcessor,proto3" json:"brain_processor,omitempty"`
	CustomizedConfig         map[string]string `protobuf:"bytes,4,rep,name=customized_config,json=customizedConfig,proto3" json:"customized_config,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral     struct{}          `json:"-"`
	XXX_unrecognized         []byte            `json:"-"`
	XXX_sizecache            int32             `json:"-"`
}

func (m *OptimizeConfig) Reset()         { *m = OptimizeConfig{} }
func (m *OptimizeConfig) String() string { return proto.CompactTextString(m) }
func (*OptimizeConfig) ProtoMessage()    {}
func (*OptimizeConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_deb8c207265d2700, []int{8}
}

func (m *OptimizeConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OptimizeConfig.Unmarshal(m, b)
}
func (m *OptimizeConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OptimizeConfig.Marshal(b, m, deterministic)
}
func (m *OptimizeConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OptimizeConfig.Merge(m, src)
}
func (m *OptimizeConfig) XXX_Size() int {
	return xxx_messageInfo_OptimizeConfig.Size(m)
}
func (m *OptimizeConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_OptimizeConfig.DiscardUnknown(m)
}

var xxx_messageInfo_OptimizeConfig proto.InternalMessageInfo

func (m *OptimizeConfig) GetOptimizerConfigRetriever() string {
	if m != nil {
		return m.OptimizerConfigRetriever
	}
	return ""
}

func (m *OptimizeConfig) GetDataStore() string {
	if m != nil {
		return m.DataStore
	}
	return ""
}

func (m *OptimizeConfig) GetBrainProcessor() string {
	if m != nil {
		return m.BrainProcessor
	}
	return ""
}

func (m *OptimizeConfig) GetCustomizedConfig() map[string]string {
	if m != nil {
		return m.CustomizedConfig
	}
	return nil
}

type PodState struct {
	Name                 string            `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Uid                  string            `protobuf:"bytes,2,opt,name=uid,proto3" json:"uid,omitempty"`
	Type                 string            `protobuf:"bytes,3,opt,name=type,proto3" json:"type,omitempty"`
	IsOom                bool              `protobuf:"varint,4,opt,name=is_oom,json=isOom,proto3" json:"is_oom,omitempty"`
	Resource             *PodResource      `protobuf:"bytes,5,opt,name=resource,proto3" json:"resource,omitempty"`
	UsedResource         *PodResource      `protobuf:"bytes,6,opt,name=used_resource,json=usedResource,proto3" json:"used_resource,omitempty"`
	CustomizedData       map[string]string `protobuf:"bytes,7,rep,name=customized_data,json=customizedData,proto3" json:"customized_data,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *PodState) Reset()         { *m = PodState{} }
func (m *PodState) String() string { return proto.CompactTextString(m) }
func (*PodState) ProtoMessage()    {}
func (*PodState) Descriptor() ([]byte, []int) {
	return fileDescriptor_deb8c207265d2700, []int{9}
}

func (m *PodState) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PodState.Unmarshal(m, b)
}
func (m *PodState) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PodState.Marshal(b, m, deterministic)
}
func (m *PodState) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PodState.Merge(m, src)
}
func (m *PodState) XXX_Size() int {
	return xxx_messageInfo_PodState.Size(m)
}
func (m *PodState) XXX_DiscardUnknown() {
	xxx_messageInfo_PodState.DiscardUnknown(m)
}

var xxx_messageInfo_PodState proto.InternalMessageInfo

func (m *PodState) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *PodState) GetUid() string {
	if m != nil {
		return m.Uid
	}
	return ""
}

func (m *PodState) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *PodState) GetIsOom() bool {
	if m != nil {
		return m.IsOom
	}
	return false
}

func (m *PodState) GetResource() *PodResource {
	if m != nil {
		return m.Resource
	}
	return nil
}

func (m *PodState) GetUsedResource() *PodResource {
	if m != nil {
		return m.UsedResource
	}
	return nil
}

func (m *PodState) GetCustomizedData() map[string]string {
	if m != nil {
		return m.CustomizedData
	}
	return nil
}

type JobState struct {
	Timestamp            int64                `protobuf:"varint,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Pods                 map[string]*PodState `protobuf:"bytes,2,rep,name=pods,proto3" json:"pods,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Speed                float32              `protobuf:"fixed32,3,opt,name=speed,proto3" json:"speed,omitempty"`
	CustomizedData       map[string]string    `protobuf:"bytes,4,rep,name=customized_data,json=customizedData,proto3" json:"customized_data,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *JobState) Reset()         { *m = JobState{} }
func (m *JobState) String() string { return proto.CompactTextString(m) }
func (*JobState) ProtoMessage()    {}
func (*JobState) Descriptor() ([]byte, []int) {
	return fileDescriptor_deb8c207265d2700, []int{10}
}

func (m *JobState) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_JobState.Unmarshal(m, b)
}
func (m *JobState) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_JobState.Marshal(b, m, deterministic)
}
func (m *JobState) XXX_Merge(src proto.Message) {
	xxx_messageInfo_JobState.Merge(m, src)
}
func (m *JobState) XXX_Size() int {
	return xxx_messageInfo_JobState.Size(m)
}
func (m *JobState) XXX_DiscardUnknown() {
	xxx_messageInfo_JobState.DiscardUnknown(m)
}

var xxx_messageInfo_JobState proto.InternalMessageInfo

func (m *JobState) GetTimestamp() int64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *JobState) GetPods() map[string]*PodState {
	if m != nil {
		return m.Pods
	}
	return nil
}

func (m *JobState) GetSpeed() float32 {
	if m != nil {
		return m.Speed
	}
	return 0
}

func (m *JobState) GetCustomizedData() map[string]string {
	if m != nil {
		return m.CustomizedData
	}
	return nil
}

type OptimizeJobMeta struct {
	Uid                  string    `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`
	Cluster              string    `protobuf:"bytes,2,opt,name=cluster,proto3" json:"cluster,omitempty"`
	Namespace            string    `protobuf:"bytes,3,opt,name=namespace,proto3" json:"namespace,omitempty"`
	State                *JobState `protobuf:"bytes,4,opt,name=state,proto3" json:"state,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *OptimizeJobMeta) Reset()         { *m = OptimizeJobMeta{} }
func (m *OptimizeJobMeta) String() string { return proto.CompactTextString(m) }
func (*OptimizeJobMeta) ProtoMessage()    {}
func (*OptimizeJobMeta) Descriptor() ([]byte, []int) {
	return fileDescriptor_deb8c207265d2700, []int{11}
}

func (m *OptimizeJobMeta) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OptimizeJobMeta.Unmarshal(m, b)
}
func (m *OptimizeJobMeta) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OptimizeJobMeta.Marshal(b, m, deterministic)
}
func (m *OptimizeJobMeta) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OptimizeJobMeta.Merge(m, src)
}
func (m *OptimizeJobMeta) XXX_Size() int {
	return xxx_messageInfo_OptimizeJobMeta.Size(m)
}
func (m *OptimizeJobMeta) XXX_DiscardUnknown() {
	xxx_messageInfo_OptimizeJobMeta.DiscardUnknown(m)
}

var xxx_messageInfo_OptimizeJobMeta proto.InternalMessageInfo

func (m *OptimizeJobMeta) GetUid() string {
	if m != nil {
		return m.Uid
	}
	return ""
}

func (m *OptimizeJobMeta) GetCluster() string {
	if m != nil {
		return m.Cluster
	}
	return ""
}

func (m *OptimizeJobMeta) GetNamespace() string {
	if m != nil {
		return m.Namespace
	}
	return ""
}

func (m *OptimizeJobMeta) GetState() *JobState {
	if m != nil {
		return m.State
	}
	return nil
}

type OptimizeRequest struct {
	Type                 string             `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Config               *OptimizeConfig    `protobuf:"bytes,2,opt,name=config,proto3" json:"config,omitempty"`
	Jobs                 []*OptimizeJobMeta `protobuf:"bytes,3,rep,name=jobs,proto3" json:"jobs,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *OptimizeRequest) Reset()         { *m = OptimizeRequest{} }
func (m *OptimizeRequest) String() string { return proto.CompactTextString(m) }
func (*OptimizeRequest) ProtoMessage()    {}
func (*OptimizeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_deb8c207265d2700, []int{12}
}

func (m *OptimizeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OptimizeRequest.Unmarshal(m, b)
}
func (m *OptimizeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OptimizeRequest.Marshal(b, m, deterministic)
}
func (m *OptimizeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OptimizeRequest.Merge(m, src)
}
func (m *OptimizeRequest) XXX_Size() int {
	return xxx_messageInfo_OptimizeRequest.Size(m)
}
func (m *OptimizeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_OptimizeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_OptimizeRequest proto.InternalMessageInfo

func (m *OptimizeRequest) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *OptimizeRequest) GetConfig() *OptimizeConfig {
	if m != nil {
		return m.Config
	}
	return nil
}

func (m *OptimizeRequest) GetJobs() []*OptimizeJobMeta {
	if m != nil {
		return m.Jobs
	}
	return nil
}

type PodResource struct {
	Memory               int64    `protobuf:"varint,1,opt,name=memory,proto3" json:"memory,omitempty"`
	Cpu                  float32  `protobuf:"fixed32,2,opt,name=cpu,proto3" json:"cpu,omitempty"`
	Gpu                  float32  `protobuf:"fixed32,3,opt,name=gpu,proto3" json:"gpu,omitempty"`
	GpuType              string   `protobuf:"bytes,4,opt,name=gpu_type,json=gpuType,proto3" json:"gpu_type,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PodResource) Reset()         { *m = PodResource{} }
func (m *PodResource) String() string { return proto.CompactTextString(m) }
func (*PodResource) ProtoMessage()    {}
func (*PodResource) Descriptor() ([]byte, []int) {
	return fileDescriptor_deb8c207265d2700, []int{13}
}

func (m *PodResource) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PodResource.Unmarshal(m, b)
}
func (m *PodResource) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PodResource.Marshal(b, m, deterministic)
}
func (m *PodResource) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PodResource.Merge(m, src)
}
func (m *PodResource) XXX_Size() int {
	return xxx_messageInfo_PodResource.Size(m)
}
func (m *PodResource) XXX_DiscardUnknown() {
	xxx_messageInfo_PodResource.DiscardUnknown(m)
}

var xxx_messageInfo_PodResource proto.InternalMessageInfo

func (m *PodResource) GetMemory() int64 {
	if m != nil {
		return m.Memory
	}
	return 0
}

func (m *PodResource) GetCpu() float32 {
	if m != nil {
		return m.Cpu
	}
	return 0
}

func (m *PodResource) GetGpu() float32 {
	if m != nil {
		return m.Gpu
	}
	return 0
}

func (m *PodResource) GetGpuType() string {
	if m != nil {
		return m.GpuType
	}
	return ""
}

type TaskGroupResource struct {
	Count                int64        `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
	Resource             *PodResource `protobuf:"bytes,2,opt,name=resource,proto3" json:"resource,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *TaskGroupResource) Reset()         { *m = TaskGroupResource{} }
func (m *TaskGroupResource) String() string { return proto.CompactTextString(m) }
func (*TaskGroupResource) ProtoMessage()    {}
func (*TaskGroupResource) Descriptor() ([]byte, []int) {
	return fileDescriptor_deb8c207265d2700, []int{14}
}

func (m *TaskGroupResource) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TaskGroupResource.Unmarshal(m, b)
}
func (m *TaskGroupResource) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TaskGroupResource.Marshal(b, m, deterministic)
}
func (m *TaskGroupResource) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TaskGroupResource.Merge(m, src)
}
func (m *TaskGroupResource) XXX_Size() int {
	return xxx_messageInfo_TaskGroupResource.Size(m)
}
func (m *TaskGroupResource) XXX_DiscardUnknown() {
	xxx_messageInfo_TaskGroupResource.DiscardUnknown(m)
}

var xxx_messageInfo_TaskGroupResource proto.InternalMessageInfo

func (m *TaskGroupResource) GetCount() int64 {
	if m != nil {
		return m.Count
	}
	return 0
}

func (m *TaskGroupResource) GetResource() *PodResource {
	if m != nil {
		return m.Resource
	}
	return nil
}

type JobResource struct {
	TaskGroupResources   map[string]*TaskGroupResource `protobuf:"bytes,1,rep,name=task_group_resources,json=taskGroupResources,proto3" json:"task_group_resources,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	PodResources         map[string]*PodResource       `protobuf:"bytes,2,rep,name=pod_resources,json=podResources,proto3" json:"pod_resources,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}                      `json:"-"`
	XXX_unrecognized     []byte                        `json:"-"`
	XXX_sizecache        int32                         `json:"-"`
}

func (m *JobResource) Reset()         { *m = JobResource{} }
func (m *JobResource) String() string { return proto.CompactTextString(m) }
func (*JobResource) ProtoMessage()    {}
func (*JobResource) Descriptor() ([]byte, []int) {
	return fileDescriptor_deb8c207265d2700, []int{15}
}

func (m *JobResource) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_JobResource.Unmarshal(m, b)
}
func (m *JobResource) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_JobResource.Marshal(b, m, deterministic)
}
func (m *JobResource) XXX_Merge(src proto.Message) {
	xxx_messageInfo_JobResource.Merge(m, src)
}
func (m *JobResource) XXX_Size() int {
	return xxx_messageInfo_JobResource.Size(m)
}
func (m *JobResource) XXX_DiscardUnknown() {
	xxx_messageInfo_JobResource.DiscardUnknown(m)
}

var xxx_messageInfo_JobResource proto.InternalMessageInfo

func (m *JobResource) GetTaskGroupResources() map[string]*TaskGroupResource {
	if m != nil {
		return m.TaskGroupResources
	}
	return nil
}

func (m *JobResource) GetPodResources() map[string]*PodResource {
	if m != nil {
		return m.PodResources
	}
	return nil
}

type JobOptimizePlan struct {
	Timestamp            uint64           `protobuf:"varint,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Resource             *JobResource     `protobuf:"bytes,2,opt,name=resource,proto3" json:"resource,omitempty"`
	Job                  *OptimizeJobMeta `protobuf:"bytes,3,opt,name=job,proto3" json:"job,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *JobOptimizePlan) Reset()         { *m = JobOptimizePlan{} }
func (m *JobOptimizePlan) String() string { return proto.CompactTextString(m) }
func (*JobOptimizePlan) ProtoMessage()    {}
func (*JobOptimizePlan) Descriptor() ([]byte, []int) {
	return fileDescriptor_deb8c207265d2700, []int{16}
}

func (m *JobOptimizePlan) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_JobOptimizePlan.Unmarshal(m, b)
}
func (m *JobOptimizePlan) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_JobOptimizePlan.Marshal(b, m, deterministic)
}
func (m *JobOptimizePlan) XXX_Merge(src proto.Message) {
	xxx_messageInfo_JobOptimizePlan.Merge(m, src)
}
func (m *JobOptimizePlan) XXX_Size() int {
	return xxx_messageInfo_JobOptimizePlan.Size(m)
}
func (m *JobOptimizePlan) XXX_DiscardUnknown() {
	xxx_messageInfo_JobOptimizePlan.DiscardUnknown(m)
}

var xxx_messageInfo_JobOptimizePlan proto.InternalMessageInfo

func (m *JobOptimizePlan) GetTimestamp() uint64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *JobOptimizePlan) GetResource() *JobResource {
	if m != nil {
		return m.Resource
	}
	return nil
}

func (m *JobOptimizePlan) GetJob() *OptimizeJobMeta {
	if m != nil {
		return m.Job
	}
	return nil
}

type JobOptimization struct {
	Timestamp            int64            `protobuf:"varint,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Config               *OptimizeConfig  `protobuf:"bytes,2,opt,name=config,proto3" json:"config,omitempty"`
	Plan                 *JobOptimizePlan `protobuf:"bytes,3,opt,name=plan,proto3" json:"plan,omitempty"`
	JobStates            []*JobState      `protobuf:"bytes,4,rep,name=job_states,json=jobStates,proto3" json:"job_states,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *JobOptimization) Reset()         { *m = JobOptimization{} }
func (m *JobOptimization) String() string { return proto.CompactTextString(m) }
func (*JobOptimization) ProtoMessage()    {}
func (*JobOptimization) Descriptor() ([]byte, []int) {
	return fileDescriptor_deb8c207265d2700, []int{17}
}

func (m *JobOptimization) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_JobOptimization.Unmarshal(m, b)
}
func (m *JobOptimization) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_JobOptimization.Marshal(b, m, deterministic)
}
func (m *JobOptimization) XXX_Merge(src proto.Message) {
	xxx_messageInfo_JobOptimization.Merge(m, src)
}
func (m *JobOptimization) XXX_Size() int {
	return xxx_messageInfo_JobOptimization.Size(m)
}
func (m *JobOptimization) XXX_DiscardUnknown() {
	xxx_messageInfo_JobOptimization.DiscardUnknown(m)
}

var xxx_messageInfo_JobOptimization proto.InternalMessageInfo

func (m *JobOptimization) GetTimestamp() int64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *JobOptimization) GetConfig() *OptimizeConfig {
	if m != nil {
		return m.Config
	}
	return nil
}

func (m *JobOptimization) GetPlan() *JobOptimizePlan {
	if m != nil {
		return m.Plan
	}
	return nil
}

func (m *JobOptimization) GetJobStates() []*JobState {
	if m != nil {
		return m.JobStates
	}
	return nil
}

type Response struct {
	Success              bool     `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Reason               string   `protobuf:"bytes,2,opt,name=reason,proto3" json:"reason,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Response) Reset()         { *m = Response{} }
func (m *Response) String() string { return proto.CompactTextString(m) }
func (*Response) ProtoMessage()    {}
func (*Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_deb8c207265d2700, []int{18}
}

func (m *Response) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Response.Unmarshal(m, b)
}
func (m *Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Response.Marshal(b, m, deterministic)
}
func (m *Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Response.Merge(m, src)
}
func (m *Response) XXX_Size() int {
	return xxx_messageInfo_Response.Size(m)
}
func (m *Response) XXX_DiscardUnknown() {
	xxx_messageInfo_Response.DiscardUnknown(m)
}

var xxx_messageInfo_Response proto.InternalMessageInfo

func (m *Response) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

func (m *Response) GetReason() string {
	if m != nil {
		return m.Reason
	}
	return ""
}

type OptimizeResponse struct {
	Response             *Response          `protobuf:"bytes,1,opt,name=response,proto3" json:"response,omitempty"`
	JobOptimizePlans     []*JobOptimizePlan `protobuf:"bytes,2,rep,name=job_optimize_plans,json=jobOptimizePlans,proto3" json:"job_optimize_plans,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *OptimizeResponse) Reset()         { *m = OptimizeResponse{} }
func (m *OptimizeResponse) String() string { return proto.CompactTextString(m) }
func (*OptimizeResponse) ProtoMessage()    {}
func (*OptimizeResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_deb8c207265d2700, []int{19}
}

func (m *OptimizeResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OptimizeResponse.Unmarshal(m, b)
}
func (m *OptimizeResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OptimizeResponse.Marshal(b, m, deterministic)
}
func (m *OptimizeResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OptimizeResponse.Merge(m, src)
}
func (m *OptimizeResponse) XXX_Size() int {
	return xxx_messageInfo_OptimizeResponse.Size(m)
}
func (m *OptimizeResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_OptimizeResponse.DiscardUnknown(m)
}

var xxx_messageInfo_OptimizeResponse proto.InternalMessageInfo

func (m *OptimizeResponse) GetResponse() *Response {
	if m != nil {
		return m.Response
	}
	return nil
}

func (m *OptimizeResponse) GetJobOptimizePlans() []*JobOptimizePlan {
	if m != nil {
		return m.JobOptimizePlans
	}
	return nil
}

type ConfigRequest struct {
	ConfigKey            string   `protobuf:"bytes,1,opt,name=config_key,json=configKey,proto3" json:"config_key,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ConfigRequest) Reset()         { *m = ConfigRequest{} }
func (m *ConfigRequest) String() string { return proto.CompactTextString(m) }
func (*ConfigRequest) ProtoMessage()    {}
func (*ConfigRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_deb8c207265d2700, []int{20}
}

func (m *ConfigRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ConfigRequest.Unmarshal(m, b)
}
func (m *ConfigRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ConfigRequest.Marshal(b, m, deterministic)
}
func (m *ConfigRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConfigRequest.Merge(m, src)
}
func (m *ConfigRequest) XXX_Size() int {
	return xxx_messageInfo_ConfigRequest.Size(m)
}
func (m *ConfigRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ConfigRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ConfigRequest proto.InternalMessageInfo

func (m *ConfigRequest) GetConfigKey() string {
	if m != nil {
		return m.ConfigKey
	}
	return ""
}

type ConfigResponse struct {
	Response             *Response `protobuf:"bytes,1,opt,name=response,proto3" json:"response,omitempty"`
	ConfigValue          string    `protobuf:"bytes,2,opt,name=config_value,json=configValue,proto3" json:"config_value,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *ConfigResponse) Reset()         { *m = ConfigResponse{} }
func (m *ConfigResponse) String() string { return proto.CompactTextString(m) }
func (*ConfigResponse) ProtoMessage()    {}
func (*ConfigResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_deb8c207265d2700, []int{21}
}

func (m *ConfigResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ConfigResponse.Unmarshal(m, b)
}
func (m *ConfigResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ConfigResponse.Marshal(b, m, deterministic)
}
func (m *ConfigResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConfigResponse.Merge(m, src)
}
func (m *ConfigResponse) XXX_Size() int {
	return xxx_messageInfo_ConfigResponse.Size(m)
}
func (m *ConfigResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ConfigResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ConfigResponse proto.InternalMessageInfo

func (m *ConfigResponse) GetResponse() *Response {
	if m != nil {
		return m.Response
	}
	return nil
}

func (m *ConfigResponse) GetConfigValue() string {
	if m != nil {
		return m.ConfigValue
	}
	return ""
}

type JobMetricsRequest struct {
	JobUuid              string   `protobuf:"bytes,1,opt,name=job_uuid,json=jobUuid,proto3" json:"job_uuid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *JobMetricsRequest) Reset()         { *m = JobMetricsRequest{} }
func (m *JobMetricsRequest) String() string { return proto.CompactTextString(m) }
func (*JobMetricsRequest) ProtoMessage()    {}
func (*JobMetricsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_deb8c207265d2700, []int{22}
}

func (m *JobMetricsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_JobMetricsRequest.Unmarshal(m, b)
}
func (m *JobMetricsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_JobMetricsRequest.Marshal(b, m, deterministic)
}
func (m *JobMetricsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_JobMetricsRequest.Merge(m, src)
}
func (m *JobMetricsRequest) XXX_Size() int {
	return xxx_messageInfo_JobMetricsRequest.Size(m)
}
func (m *JobMetricsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_JobMetricsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_JobMetricsRequest proto.InternalMessageInfo

func (m *JobMetricsRequest) GetJobUuid() string {
	if m != nil {
		return m.JobUuid
	}
	return ""
}

type JobMetricsResponse struct {
	Response             *Response `protobuf:"bytes,1,opt,name=response,proto3" json:"response,omitempty"`
	JobMetrics           string    `protobuf:"bytes,2,opt,name=job_metrics,json=jobMetrics,proto3" json:"job_metrics,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *JobMetricsResponse) Reset()         { *m = JobMetricsResponse{} }
func (m *JobMetricsResponse) String() string { return proto.CompactTextString(m) }
func (*JobMetricsResponse) ProtoMessage()    {}
func (*JobMetricsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_deb8c207265d2700, []int{23}
}

func (m *JobMetricsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_JobMetricsResponse.Unmarshal(m, b)
}
func (m *JobMetricsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_JobMetricsResponse.Marshal(b, m, deterministic)
}
func (m *JobMetricsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_JobMetricsResponse.Merge(m, src)
}
func (m *JobMetricsResponse) XXX_Size() int {
	return xxx_messageInfo_JobMetricsResponse.Size(m)
}
func (m *JobMetricsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_JobMetricsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_JobMetricsResponse proto.InternalMessageInfo

func (m *JobMetricsResponse) GetResponse() *Response {
	if m != nil {
		return m.Response
	}
	return nil
}

func (m *JobMetricsResponse) GetJobMetrics() string {
	if m != nil {
		return m.JobMetrics
	}
	return ""
}

type KubeWatchEvent struct {
	Type                 string            `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Jobs                 []*JobMeta        `protobuf:"bytes,2,rep,name=jobs,proto3" json:"jobs,omitempty"`
	Admins               []string          `protobuf:"bytes,3,rep,name=admins,proto3" json:"admins,omitempty"`
	CustomizedData       map[string]string `protobuf:"bytes,4,rep,name=customized_data,json=customizedData,proto3" json:"customized_data,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *KubeWatchEvent) Reset()         { *m = KubeWatchEvent{} }
func (m *KubeWatchEvent) String() string { return proto.CompactTextString(m) }
func (*KubeWatchEvent) ProtoMessage()    {}
func (*KubeWatchEvent) Descriptor() ([]byte, []int) {
	return fileDescriptor_deb8c207265d2700, []int{24}
}

func (m *KubeWatchEvent) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_KubeWatchEvent.Unmarshal(m, b)
}
func (m *KubeWatchEvent) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_KubeWatchEvent.Marshal(b, m, deterministic)
}
func (m *KubeWatchEvent) XXX_Merge(src proto.Message) {
	xxx_messageInfo_KubeWatchEvent.Merge(m, src)
}
func (m *KubeWatchEvent) XXX_Size() int {
	return xxx_messageInfo_KubeWatchEvent.Size(m)
}
func (m *KubeWatchEvent) XXX_DiscardUnknown() {
	xxx_messageInfo_KubeWatchEvent.DiscardUnknown(m)
}

var xxx_messageInfo_KubeWatchEvent proto.InternalMessageInfo

func (m *KubeWatchEvent) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *KubeWatchEvent) GetJobs() []*JobMeta {
	if m != nil {
		return m.Jobs
	}
	return nil
}

func (m *KubeWatchEvent) GetAdmins() []string {
	if m != nil {
		return m.Admins
	}
	return nil
}

func (m *KubeWatchEvent) GetCustomizedData() map[string]string {
	if m != nil {
		return m.CustomizedData
	}
	return nil
}

type OptimizeEvent struct {
	Type                 string            `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	ProcessorName        string            `protobuf:"bytes,2,opt,name=processor_name,json=processorName,proto3" json:"processor_name,omitempty"`
	DataStoreName        string            `protobuf:"bytes,3,opt,name=data_store_name,json=dataStoreName,proto3" json:"data_store_name,omitempty"`
	Jobs                 []string          `protobuf:"bytes,4,rep,name=jobs,proto3" json:"jobs,omitempty"`
	CustomizedData       map[string]string `protobuf:"bytes,5,rep,name=customized_data,json=customizedData,proto3" json:"customized_data,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *OptimizeEvent) Reset()         { *m = OptimizeEvent{} }
func (m *OptimizeEvent) String() string { return proto.CompactTextString(m) }
func (*OptimizeEvent) ProtoMessage()    {}
func (*OptimizeEvent) Descriptor() ([]byte, []int) {
	return fileDescriptor_deb8c207265d2700, []int{25}
}

func (m *OptimizeEvent) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OptimizeEvent.Unmarshal(m, b)
}
func (m *OptimizeEvent) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OptimizeEvent.Marshal(b, m, deterministic)
}
func (m *OptimizeEvent) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OptimizeEvent.Merge(m, src)
}
func (m *OptimizeEvent) XXX_Size() int {
	return xxx_messageInfo_OptimizeEvent.Size(m)
}
func (m *OptimizeEvent) XXX_DiscardUnknown() {
	xxx_messageInfo_OptimizeEvent.DiscardUnknown(m)
}

var xxx_messageInfo_OptimizeEvent proto.InternalMessageInfo

func (m *OptimizeEvent) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *OptimizeEvent) GetProcessorName() string {
	if m != nil {
		return m.ProcessorName
	}
	return ""
}

func (m *OptimizeEvent) GetDataStoreName() string {
	if m != nil {
		return m.DataStoreName
	}
	return ""
}

func (m *OptimizeEvent) GetJobs() []string {
	if m != nil {
		return m.Jobs
	}
	return nil
}

func (m *OptimizeEvent) GetCustomizedData() map[string]string {
	if m != nil {
		return m.CustomizedData
	}
	return nil
}

type OptimizeProcessResponse struct {
	Response             *Response `protobuf:"bytes,1,opt,name=response,proto3" json:"response,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *OptimizeProcessResponse) Reset()         { *m = OptimizeProcessResponse{} }
func (m *OptimizeProcessResponse) String() string { return proto.CompactTextString(m) }
func (*OptimizeProcessResponse) ProtoMessage()    {}
func (*OptimizeProcessResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_deb8c207265d2700, []int{26}
}

func (m *OptimizeProcessResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OptimizeProcessResponse.Unmarshal(m, b)
}
func (m *OptimizeProcessResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OptimizeProcessResponse.Marshal(b, m, deterministic)
}
func (m *OptimizeProcessResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OptimizeProcessResponse.Merge(m, src)
}
func (m *OptimizeProcessResponse) XXX_Size() int {
	return xxx_messageInfo_OptimizeProcessResponse.Size(m)
}
func (m *OptimizeProcessResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_OptimizeProcessResponse.DiscardUnknown(m)
}

var xxx_messageInfo_OptimizeProcessResponse proto.InternalMessageInfo

func (m *OptimizeProcessResponse) GetResponse() *Response {
	if m != nil {
		return m.Response
	}
	return nil
}

func init() {
	proto.RegisterEnum("proto.MetricsType", MetricsType_name, MetricsType_value)
	proto.RegisterType((*TrainingHyperParams)(nil), "proto.TrainingHyperParams")
	proto.RegisterType((*WorkflowFeature)(nil), "proto.WorkflowFeature")
	proto.RegisterType((*TrainingSetFeature)(nil), "proto.TrainingSetFeature")
	proto.RegisterType((*ModelFeature)(nil), "proto.ModelFeature")
	proto.RegisterMapType((map[string]int64)(nil), "proto.ModelFeature.TensorAllocBytesEntry")
	proto.RegisterType((*RuntimeInfo)(nil), "proto.RuntimeInfo")
	proto.RegisterType((*PodMeta)(nil), "proto.PodMeta")
	proto.RegisterType((*JobMeta)(nil), "proto.JobMeta")
	proto.RegisterType((*JobMetrics)(nil), "proto.JobMetrics")
	proto.RegisterType((*OptimizeConfig)(nil), "proto.OptimizeConfig")
	proto.RegisterMapType((map[string]string)(nil), "proto.OptimizeConfig.CustomizedConfigEntry")
	proto.RegisterType((*PodState)(nil), "proto.PodState")
	proto.RegisterMapType((map[string]string)(nil), "proto.PodState.CustomizedDataEntry")
	proto.RegisterType((*JobState)(nil), "proto.JobState")
	proto.RegisterMapType((map[string]string)(nil), "proto.JobState.CustomizedDataEntry")
	proto.RegisterMapType((map[string]*PodState)(nil), "proto.JobState.PodsEntry")
	proto.RegisterType((*OptimizeJobMeta)(nil), "proto.OptimizeJobMeta")
	proto.RegisterType((*OptimizeRequest)(nil), "proto.OptimizeRequest")
	proto.RegisterType((*PodResource)(nil), "proto.PodResource")
	proto.RegisterType((*TaskGroupResource)(nil), "proto.TaskGroupResource")
	proto.RegisterType((*JobResource)(nil), "proto.JobResource")
	proto.RegisterMapType((map[string]*PodResource)(nil), "proto.JobResource.PodResourcesEntry")
	proto.RegisterMapType((map[string]*TaskGroupResource)(nil), "proto.JobResource.TaskGroupResourcesEntry")
	proto.RegisterType((*JobOptimizePlan)(nil), "proto.JobOptimizePlan")
	proto.RegisterType((*JobOptimization)(nil), "proto.JobOptimization")
	proto.RegisterType((*Response)(nil), "proto.Response")
	proto.RegisterType((*OptimizeResponse)(nil), "proto.OptimizeResponse")
	proto.RegisterType((*ConfigRequest)(nil), "proto.ConfigRequest")
	proto.RegisterType((*ConfigResponse)(nil), "proto.ConfigResponse")
	proto.RegisterType((*JobMetricsRequest)(nil), "proto.JobMetricsRequest")
	proto.RegisterType((*JobMetricsResponse)(nil), "proto.JobMetricsResponse")
	proto.RegisterType((*KubeWatchEvent)(nil), "proto.KubeWatchEvent")
	proto.RegisterMapType((map[string]string)(nil), "proto.KubeWatchEvent.CustomizedDataEntry")
	proto.RegisterType((*OptimizeEvent)(nil), "proto.OptimizeEvent")
	proto.RegisterMapType((map[string]string)(nil), "proto.OptimizeEvent.CustomizedDataEntry")
	proto.RegisterType((*OptimizeProcessResponse)(nil), "proto.OptimizeProcessResponse")
}

func init() { proto.RegisterFile("dlrover/proto/brain.proto", fileDescriptor_deb8c207265d2700) }

var fileDescriptor_deb8c207265d2700 = []byte{
	// 2470 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xbc, 0x59, 0xcf, 0x6f, 0x1c, 0x49,
	0xf5, 0xf7, 0xfc, 0x9e, 0x79, 0xf3, 0xbb, 0x6c, 0x27, 0xe3, 0xd9, 0xec, 0x37, 0x49, 0x7f, 0x49,
	0xd6, 0xf1, 0x6a, 0x27, 0x60, 0x84, 0x16, 0x76, 0x23, 0xa1, 0xfc, 0x70, 0xb0, 0xb3, 0x9b, 0x8d,
	0x69, 0x67, 0x37, 0x80, 0x90, 0x9a, 0x9a, 0xe9, 0xf2, 0xb8, 0xed, 0xe9, 0xae, 0xa6, 0xab, 0xda,
	0xb1, 0x23, 0x21, 0x21, 0x24, 0x0e, 0x1c, 0x38, 0x20, 0x24, 0x4e, 0xfc, 0x1b, 0x5c, 0xf8, 0x0b,
	0x10, 0xf7, 0xbd, 0x72, 0x40, 0x9c, 0x10, 0x77, 0xae, 0xa8, 0x5e, 0x55, 0xf7, 0x74, 0x8f, 0xc7,
	0x1b, 0x36, 0x8b, 0xf6, 0xe4, 0xae, 0xf7, 0x5e, 0xbd, 0x7a, 0xf5, 0xa9, 0xf7, 0x3e, 0xaf, 0x6a,
	0x0c, 0x1b, 0xee, 0x2c, 0xe2, 0xa7, 0x2c, 0xba, 0x1b, 0x46, 0x5c, 0xf2, 0xbb, 0xe3, 0x88, 0x7a,
	0xc1, 0x08, 0xbf, 0x49, 0x05, 0xff, 0x0c, 0xdf, 0x9a, 0x72, 0x3e, 0x9d, 0x31, 0x6d, 0x30, 0x8e,
	0x0f, 0xef, 0x32, 0x3f, 0x94, 0xe7, 0xda, 0xc6, 0x9a, 0xc2, 0xea, 0x73, 0x35, 0xc5, 0x0b, 0xa6,
	0xbb, 0xe7, 0x21, 0x8b, 0xf6, 0x69, 0x44, 0x7d, 0x41, 0xde, 0x06, 0x18, 0x53, 0x39, 0x39, 0x72,
	0x84, 0xf7, 0x8a, 0x0d, 0x0a, 0x37, 0x0a, 0x9b, 0x25, 0xbb, 0x81, 0x92, 0x03, 0xef, 0x15, 0x23,
	0x6b, 0x50, 0x61, 0x21, 0x9f, 0x1c, 0x0d, 0x8a, 0xa8, 0xd1, 0x03, 0xf2, 0x16, 0x34, 0x7c, 0x7a,
	0xe6, 0x08, 0xc9, 0x42, 0x31, 0x28, 0xa1, 0xa6, 0xee, 0xd3, 0xb3, 0x03, 0x35, 0xb6, 0xfe, 0x56,
	0x80, 0xee, 0x0b, 0x1e, 0x9d, 0x1c, 0xce, 0xf8, 0xcb, 0xc7, 0x8c, 0xca, 0x38, 0x62, 0x64, 0x03,
	0xea, 0xc7, 0x7c, 0xec, 0x04, 0xd4, 0xd7, 0x6b, 0x34, 0xec, 0xda, 0x31, 0x1f, 0x7f, 0x42, 0x7d,
	0x46, 0xae, 0x42, 0x2d, 0x16, 0x2c, 0x72, 0x3c, 0x17, 0xd7, 0x68, 0xd8, 0x55, 0x35, 0xdc, 0x73,
	0xc9, 0x4d, 0x68, 0x4d, 0xb8, 0xcb, 0x1c, 0xea, 0xba, 0x11, 0x13, 0x7a, 0x9d, 0x86, 0xdd, 0x54,
	0xb2, 0xfb, 0x5a, 0x44, 0xae, 0x43, 0xf3, 0xa5, 0x59, 0x49, 0xcd, 0x2f, 0xa3, 0x05, 0x24, 0xa2,
	0x3d, 0x57, 0x39, 0x0f, 0x94, 0x0f, 0xcf, 0x1d, 0x54, 0xb4, 0x73, 0x35, 0xd4, 0xce, 0xb9, 0x1b,
	0x0a, 0x27, 0x8c, 0xf8, 0x31, 0x9b, 0xc8, 0x41, 0x55, 0x3b, 0x57, 0xb2, 0x7d, 0x2d, 0x52, 0x73,
	0x3d, 0x34, 0x70, 0x07, 0xb5, 0x1b, 0x85, 0xcd, 0xba, 0x5d, 0xf5, 0x94, 0xce, 0xb5, 0x7e, 0x5f,
	0x02, 0x92, 0x40, 0x79, 0xc0, 0x64, 0xb2, 0xc7, 0x9b, 0xd0, 0x72, 0xa9, 0xa4, 0x82, 0xc9, 0x2c,
	0x96, 0x4d, 0x23, 0x43, 0x34, 0x33, 0x26, 0x08, 0x85, 0xde, 0x70, 0x62, 0x82, 0x70, 0x6c, 0x41,
	0x5f, 0x84, 0x34, 0x12, 0xcc, 0xf1, 0x24, 0xf3, 0x9d, 0x09, 0x8f, 0x03, 0x69, 0x20, 0xee, 0x6a,
	0xc5, 0x9e, 0x64, 0xfe, 0x43, 0x25, 0x26, 0xef, 0x80, 0x11, 0x39, 0x87, 0x3a, 0x06, 0x61, 0x20,
	0xe8, 0x68, 0xb1, 0x89, 0x4c, 0x90, 0x6d, 0x58, 0xcf, 0x1b, 0x3a, 0xd3, 0x88, 0xc7, 0xa1, 0x30,
	0xa0, 0xac, 0xe6, 0xcc, 0x7f, 0x80, 0xaa, 0x25, 0x73, 0xc4, 0x11, 0x0d, 0x99, 0x30, 0x50, 0xe5,
	0xe7, 0x1c, 0xa0, 0x8a, 0xdc, 0x82, 0x8e, 0xcb, 0x82, 0x6c, 0x3c, 0x35, 0x34, 0x6e, 0xa3, 0x34,
	0x0d, 0xe7, 0x9b, 0xb0, 0x96, 0x33, 0x4b, 0x3c, 0xd7, 0xd1, 0x98, 0x64, 0x8d, 0x8d, 0xe3, 0x9b,
	0xd0, 0x12, 0x92, 0x47, 0x74, 0xca, 0x34, 0xb6, 0x0d, 0x8d, 0xad, 0x91, 0x29, 0x6c, 0xad, 0xcf,
	0xcb, 0xd0, 0x7a, 0xca, 0x5d, 0x36, 0x4b, 0xce, 0xe3, 0x16, 0x74, 0x4e, 0x69, 0xe4, 0xd1, 0xf1,
	0x8c, 0x19, 0x18, 0xf5, 0x89, 0xb4, 0x13, 0xa9, 0x06, 0x71, 0x03, 0xea, 0x3c, 0x34, 0x06, 0x3a,
	0xc9, 0x6b, 0x3c, 0xd4, 0xaa, 0xbb, 0xb0, 0xca, 0xfc, 0x31, 0x73, 0x5d, 0x2f, 0x98, 0x3a, 0xae,
	0xe7, 0xb3, 0x40, 0x78, 0x3c, 0x30, 0xa7, 0x41, 0x52, 0xd5, 0xa3, 0x44, 0x43, 0x46, 0xb0, 0x2a,
	0xb9, 0xa4, 0x33, 0x27, 0x5d, 0x18, 0xa3, 0x2d, 0xe3, 0x84, 0x3e, 0xaa, 0x3e, 0x33, 0x1a, 0xcc,
	0x87, 0x2d, 0xe8, 0xab, 0x3a, 0xca, 0x5b, 0x57, 0xf4, 0x61, 0xfb, 0xf4, 0x2c, 0x67, 0x7b, 0x1b,
	0xba, 0x71, 0xe8, 0x52, 0xc9, 0x9c, 0x34, 0xdc, 0xaa, 0xde, 0x8f, 0x16, 0x3f, 0x33, 0x41, 0x5b,
	0xd0, 0x8e, 0x18, 0x75, 0xe7, 0x56, 0x35, 0x8d, 0x95, 0x12, 0x26, 0x36, 0xb7, 0xa1, 0xeb, 0x05,
	0x61, 0x2c, 0x9d, 0x43, 0xa6, 0x4a, 0xdf, 0x8d, 0x23, 0xc4, 0xbe, 0x64, 0xb7, 0x51, 0xfc, 0x58,
	0x49, 0x1f, 0xc5, 0x91, 0xaa, 0xfe, 0xc3, 0x19, 0x0f, 0x85, 0xc1, 0x5b, 0x0f, 0xf4, 0x0a, 0x93,
	0xd3, 0xf9, 0x0a, 0x90, 0xac, 0x30, 0x39, 0x4d, 0x56, 0xd8, 0x82, 0xfe, 0xc9, 0xa9, 0x93, 0x43,
	0x4f, 0x0c, 0x9a, 0x37, 0x4a, 0x6a, 0x67, 0x27, 0xa7, 0x3b, 0x19, 0xe8, 0x04, 0x79, 0x01, 0x44,
	0xb2, 0x40, 0xf0, 0xc8, 0xa1, 0xb3, 0x19, 0x9f, 0x38, 0xe3, 0x73, 0xc9, 0xc4, 0xa0, 0x75, 0xa3,
	0xb4, 0xd9, 0xdc, 0xbe, 0xa3, 0xd9, 0x6b, 0x94, 0x3d, 0xd9, 0xd1, 0x73, 0xb4, 0xbe, 0xaf, 0x8c,
	0x1f, 0x28, 0xdb, 0x9d, 0x40, 0x46, 0xe7, 0x76, 0x4f, 0x2e, 0x88, 0x87, 0x0f, 0x61, 0x7d, 0xa9,
	0x29, 0xe9, 0x41, 0xe9, 0x84, 0x9d, 0x1b, 0x26, 0x52, 0x9f, 0x6a, 0xa7, 0xa7, 0x74, 0x16, 0xb3,
	0x84, 0xe7, 0x70, 0xf0, 0x41, 0xf1, 0xbb, 0x05, 0xeb, 0x0f, 0x05, 0x68, 0xda, 0x71, 0x20, 0x3d,
	0x9f, 0xed, 0x05, 0x87, 0x5c, 0x71, 0xce, 0x74, 0xc6, 0xc7, 0x74, 0x86, 0xf4, 0x67, 0x72, 0x0a,
	0xb4, 0x48, 0x11, 0x20, 0xf9, 0x16, 0xb4, 0xa2, 0x38, 0x50, 0xe4, 0xe0, 0x84, 0xdc, 0x15, 0x83,
	0x22, 0x6e, 0xa4, 0x63, 0x36, 0xb2, 0xcf, 0xdd, 0xa7, 0x4c, 0x52, 0xbb, 0x69, 0x6c, 0xf6, 0xb9,
	0x8b, 0x24, 0xac, 0xfc, 0x3b, 0x42, 0x52, 0x3f, 0x34, 0xf9, 0xd5, 0x50, 0x92, 0x03, 0x25, 0x50,
	0xc1, 0x89, 0x90, 0x31, 0x4d, 0x70, 0x45, 0x5b, 0x0f, 0xac, 0x7f, 0x14, 0xa0, 0x66, 0xbc, 0xa9,
	0x24, 0x0e, 0xb9, 0x9b, 0xe3, 0xd7, 0x90, 0xbb, 0x48, 0x28, 0xeb, 0x50, 0x55, 0x2a, 0x2f, 0x34,
	0x6c, 0x53, 0x09, 0xb9, 0xbb, 0x17, 0xce, 0x99, 0x31, 0x34, 0xc4, 0xaa, 0x99, 0x31, 0x54, 0xdc,
	0x7e, 0xc4, 0x85, 0x21, 0x28, 0x4d, 0x27, 0x75, 0x25, 0x40, 0x67, 0xd7, 0xa0, 0xa1, 0xe4, 0x22,
	0xa4, 0x13, 0x66, 0xc8, 0x63, 0x2e, 0x50, 0x51, 0x78, 0xc2, 0xf1, 0xbd, 0x33, 0xe6, 0x62, 0x6e,
	0xd6, 0xed, 0x9a, 0x27, 0x9e, 0xaa, 0x21, 0x76, 0x0c, 0xe6, 0x3b, 0xb1, 0xa0, 0x53, 0x86, 0x19,
	0x59, 0xb0, 0xeb, 0x3e, 0xf3, 0x3f, 0x55, 0x63, 0xa5, 0x9c, 0x84, 0xb1, 0x51, 0xd6, 0xb5, 0x72,
	0x12, 0xc6, 0xa8, 0xb4, 0x7e, 0x01, 0xb5, 0x27, 0x7c, 0x8c, 0xbb, 0x24, 0x50, 0x8e, 0x63, 0xcf,
	0x35, 0x3b, 0xc4, 0x6f, 0x25, 0xcb, 0x50, 0x29, 0x7e, 0xa3, 0x9d, 0x60, 0x91, 0xd9, 0x18, 0x7e,
	0x93, 0x01, 0xd4, 0x26, 0xb3, 0x58, 0x48, 0x16, 0x99, 0x4d, 0x25, 0xc3, 0x2f, 0xde, 0x93, 0xf5,
	0xf7, 0x0a, 0x80, 0x5e, 0x3f, 0xf2, 0x26, 0x78, 0x52, 0x8a, 0xad, 0x1d, 0xc5, 0x3c, 0x09, 0xd4,
	0x0d, 0x25, 0x39, 0x50, 0x02, 0x72, 0x47, 0xf7, 0x39, 0x9f, 0x49, 0x8a, 0x11, 0xcd, 0xcf, 0xdd,
	0xec, 0x01, 0xfb, 0x1e, 0x6e, 0xe6, 0x3b, 0xd0, 0xf2, 0xb5, 0x53, 0x47, 0x9e, 0x87, 0x0c, 0x83,
	0xed, 0x6c, 0x93, 0x24, 0xdf, 0xb5, 0xea, 0xf9, 0x79, 0xc8, 0xec, 0xa6, 0x3f, 0x1f, 0x90, 0x7d,
	0x58, 0x97, 0xa6, 0xf7, 0x38, 0x47, 0xaa, 0x8f, 0x3b, 0x21, 0x36, 0x72, 0xdc, 0x55, 0x73, 0x7b,
	0x68, 0xe6, 0x2f, 0x69, 0xf5, 0xbb, 0x2b, 0xf6, 0xaa, 0x5c, 0x72, 0x03, 0x78, 0x08, 0xbd, 0xb4,
	0x89, 0x1a, 0x42, 0x46, 0x18, 0x9a, 0xdb, 0x57, 0x8c, 0xb3, 0x85, 0x6e, 0xbe, 0xbb, 0x62, 0x77,
	0x5f, 0x2e, 0x34, 0xf8, 0xa7, 0xb0, 0x96, 0x86, 0xa5, 0xda, 0x5b, 0xe2, 0xa8, 0x8a, 0x8e, 0x36,
	0x16, 0xa2, 0x9a, 0x77, 0xcd, 0xdd, 0x15, 0x9b, 0xc8, 0x8b, 0xbd, 0xf4, 0x03, 0x68, 0xfb, 0xaa,
	0xe2, 0x53, 0x3f, 0x35, 0xf4, 0xb3, 0xba, 0x84, 0x0d, 0x76, 0x57, 0xec, 0x96, 0x9f, 0xe5, 0xfd,
	0xf7, 0xb1, 0xfe, 0xb0, 0x9e, 0xbc, 0xe0, 0x90, 0x63, 0x42, 0x35, 0x53, 0x60, 0x33, 0xa5, 0xbc,
	0xbb, 0x82, 0x55, 0x98, 0x56, 0xf6, 0x26, 0x74, 0xd5, 0xe1, 0xb1, 0x33, 0x4f, 0x3a, 0x11, 0xa3,
	0x82, 0x07, 0xc8, 0x7b, 0x8d, 0xdd, 0x15, 0xbb, 0x7d, 0xcc, 0xc7, 0x3b, 0x67, 0x9e, 0xb4, 0x51,
	0x4c, 0xae, 0x03, 0xb0, 0x33, 0x19, 0x51, 0xbd, 0x00, 0x18, 0xa3, 0x06, 0xca, 0xd0, 0xd5, 0x1a,
	0x94, 0xf1, 0x50, 0x9b, 0x46, 0x85, 0x23, 0x72, 0x0d, 0xea, 0x11, 0x13, 0x3c, 0x8e, 0x26, 0x6c,
	0xd0, 0x32, 0x9a, 0x54, 0x42, 0xee, 0x40, 0x77, 0x12, 0x0b, 0xc9, 0x7d, 0xef, 0x15, 0x73, 0x1d,
	0x95, 0x53, 0x83, 0xb6, 0x31, 0xea, 0xcc, 0x15, 0x8f, 0xa8, 0xa4, 0xea, 0xc8, 0x54, 0xa4, 0x3c,
	0x94, 0x9e, 0xef, 0xbd, 0xa2, 0x52, 0x75, 0xa5, 0x4e, 0xee, 0xc8, 0x9e, 0xf0, 0xf1, 0xb3, 0x8c,
	0x56, 0x1d, 0xd9, 0x71, 0x5e, 0xf4, 0xa0, 0x01, 0x35, 0x93, 0x58, 0xd6, 0x9f, 0x8a, 0xd0, 0x31,
	0x3a, 0xf6, 0x90, 0x07, 0x87, 0xde, 0x94, 0xdc, 0x83, 0xa1, 0x71, 0xcf, 0x22, 0x67, 0x82, 0x32,
	0x27, 0x52, 0xe6, 0xec, 0x94, 0x45, 0x26, 0xf1, 0x07, 0xa9, 0x85, 0x9e, 0x64, 0x27, 0xfa, 0x85,
	0x32, 0x29, 0x2e, 0x96, 0xc9, 0x3b, 0xd0, 0xc5, 0xeb, 0xab, 0xba, 0x5d, 0x4d, 0x98, 0x10, 0x3c,
	0xa9, 0xd5, 0x0e, 0x8a, 0xf7, 0x13, 0x29, 0xf9, 0x11, 0xf4, 0x33, 0x98, 0xe8, 0x30, 0x06, 0x65,
	0x24, 0xd4, 0x77, 0xcd, 0x4e, 0xf3, 0x71, 0x8f, 0x1e, 0xa6, 0xe6, 0x5a, 0x60, 0x7a, 0xc3, 0x64,
	0x41, 0xac, 0x7a, 0xc3, 0x52, 0xd3, 0xd7, 0xf5, 0x86, 0x46, 0xb6, 0x37, 0x7c, 0x5e, 0x84, 0xfa,
	0x3e, 0x77, 0x0f, 0x24, 0x95, 0x2c, 0x65, 0xa2, 0x42, 0x86, 0x89, 0x7a, 0x50, 0x8a, 0xd3, 0x8b,
	0x6d, 0xc9, 0xf0, 0x55, 0x5a, 0xee, 0x0d, 0x93, 0x17, 0xeb, 0x50, 0xf5, 0x84, 0xc3, 0xb9, 0x8f,
	0x45, 0x5c, 0xb7, 0x2b, 0x9e, 0x78, 0xc6, 0x7d, 0x32, 0xca, 0xa4, 0x4b, 0x25, 0x97, 0xc4, 0xfb,
	0xdc, 0xb5, 0x8d, 0x26, 0x93, 0x40, 0xef, 0x43, 0x3b, 0x16, 0xcc, 0x75, 0xd2, 0x49, 0xd5, 0x4b,
	0x27, 0xb5, 0x94, 0x61, 0x32, 0x22, 0x1f, 0x5f, 0xcc, 0xbc, 0x1a, 0x62, 0xfc, 0xff, 0xf3, 0xa9,
	0xb8, 0xc7, 0x0c, 0xba, 0x2a, 0x0f, 0x35, 0xb6, 0x0b, 0xc9, 0x39, 0xbc, 0x0f, 0xab, 0x4b, 0xcc,
	0xbe, 0x14, 0xae, 0x7f, 0x29, 0x42, 0xfd, 0x09, 0x1f, 0x6b, 0x5c, 0xaf, 0x01, 0xb6, 0x42, 0xdd,
	0x1b, 0x0b, 0xf3, 0xde, 0x88, 0x02, 0xf2, 0x1e, 0x94, 0x33, 0x5d, 0x76, 0x63, 0x9e, 0xfe, 0x3a,
	0x60, 0xd5, 0x5e, 0x75, 0x98, 0x68, 0x36, 0x6f, 0xa5, 0xa5, 0x4c, 0x2b, 0x5d, 0x06, 0x40, 0x39,
	0x07, 0x40, 0xea, 0xef, 0xbf, 0x01, 0x60, 0x17, 0x1a, 0xe9, 0xb2, 0x4b, 0xb6, 0x7d, 0x2b, 0xbb,
	0xed, 0xe6, 0x76, 0x77, 0x01, 0xe3, 0x0c, 0x0e, 0xff, 0x0b, 0x28, 0x7f, 0x55, 0x80, 0x6e, 0x52,
	0x22, 0x49, 0x1f, 0x35, 0x59, 0x59, 0x98, 0x67, 0x65, 0xa6, 0x3b, 0x16, 0xbf, 0xa0, 0x3b, 0x96,
	0x16, 0x3b, 0xfe, 0x2d, 0xa8, 0x08, 0x15, 0xb4, 0xe9, 0x3e, 0xdd, 0x05, 0xb8, 0x6c, 0xad, 0xb5,
	0x7e, 0x99, 0x09, 0xc2, 0x66, 0x3f, 0x8f, 0x99, 0x90, 0x69, 0x21, 0x14, 0x32, 0x85, 0xf0, 0x1e,
	0x54, 0x4d, 0x8d, 0x6b, 0x6c, 0xd6, 0x97, 0xd6, 0xb8, 0x6d, 0x8c, 0xc8, 0x16, 0x94, 0x8f, 0xf9,
	0x58, 0xbd, 0x0c, 0x4b, 0x19, 0xea, 0x5b, 0xd8, 0xad, 0x8d, 0x36, 0x96, 0x0b, 0xcd, 0x4c, 0x01,
	0x90, 0x2b, 0x50, 0xf5, 0x99, 0xcf, 0xa3, 0x73, 0x93, 0x51, 0x66, 0xa4, 0xa0, 0x99, 0x84, 0x31,
	0x2e, 0x5f, 0xb4, 0xd5, 0xa7, 0x92, 0x4c, 0xc3, 0xd8, 0xe4, 0x8b, 0xfa, 0x54, 0xd7, 0x9c, 0x69,
	0x18, 0xeb, 0xae, 0x6d, 0xee, 0x12, 0xd3, 0x30, 0x56, 0xdd, 0xd9, 0xfa, 0x31, 0xf4, 0x9f, 0x53,
	0x71, 0x82, 0x4f, 0xa8, 0x74, 0xad, 0x35, 0xa8, 0x64, 0xdf, 0x1f, 0x7a, 0x90, 0xab, 0xee, 0xe2,
	0xeb, 0xab, 0xdb, 0xfa, 0x57, 0x11, 0x9a, 0x4f, 0xf8, 0x38, 0xf5, 0xfa, 0x53, 0x58, 0x93, 0x54,
	0x9c, 0xe8, 0x97, 0x5c, 0x5a, 0xf3, 0x62, 0x50, 0x40, 0x30, 0xb6, 0xe6, 0x27, 0x91, 0xcc, 0x18,
	0x5d, 0x88, 0xcc, 0x54, 0x06, 0x91, 0x17, 0x14, 0x64, 0x0f, 0xda, 0xea, 0xd6, 0x38, 0x77, 0xab,
	0xeb, 0xeb, 0x1b, 0x4b, 0xdc, 0x66, 0xc2, 0x35, 0x0e, 0x5b, 0x61, 0x46, 0x34, 0x74, 0xe0, 0xea,
	0x25, 0x2b, 0x2f, 0x49, 0xe4, 0x51, 0xbe, 0x38, 0x06, 0xc9, 0xc5, 0x61, 0xd1, 0x41, 0xb6, 0x4a,
	0x0e, 0xa0, 0x7f, 0x21, 0x86, 0x25, 0xae, 0x37, 0xf3, 0xae, 0x97, 0xa1, 0x9d, 0xa9, 0x9b, 0xdf,
	0x14, 0xa0, 0x3b, 0x6f, 0xa2, 0x6c, 0x7f, 0x46, 0x83, 0x8b, 0x4c, 0x54, 0xce, 0x32, 0xd1, 0xe5,
	0x07, 0x9a, 0x41, 0x2b, 0x43, 0xd7, 0x9b, 0x50, 0x3a, 0xe6, 0x63, 0x4c, 0xac, 0xcb, 0x93, 0x57,
	0x99, 0x58, 0x7f, 0xce, 0xc5, 0x82, 0xdd, 0xfb, 0xb5, 0xac, 0xf8, 0x65, 0x0b, 0x29, 0x9c, 0xd1,
	0x60, 0x21, 0x96, 0x85, 0xed, 0xdb, 0x68, 0x43, 0x46, 0x00, 0xea, 0xee, 0x81, 0x85, 0x2d, 0x0c,
	0x4d, 0x5e, 0xa8, 0xfb, 0xc6, 0xb1, 0xf9, 0x12, 0xd6, 0x3d, 0xa8, 0xdb, 0x4c, 0x84, 0x3c, 0x10,
	0x4c, 0xd1, 0x8c, 0x88, 0x27, 0xaa, 0xb7, 0x63, 0xc8, 0x75, 0x3b, 0x19, 0xaa, 0x7a, 0x34, 0x57,
	0x2e, 0xf3, 0x23, 0x90, 0x1e, 0x59, 0xbf, 0x2e, 0x40, 0x6f, 0xce, 0x1c, 0xc6, 0xcd, 0xbb, 0x88,
	0x34, 0x7e, 0xa3, 0x9f, 0x79, 0x00, 0x89, 0x89, 0x9d, 0x1a, 0x90, 0x47, 0x40, 0x32, 0x77, 0x25,
	0xe6, 0xa8, 0x4d, 0x24, 0xe9, 0x7c, 0xd9, 0x4e, 0x7b, 0xc7, 0x79, 0x81, 0xb0, 0x46, 0xd0, 0x4e,
	0xee, 0x38, 0x9a, 0xbe, 0xde, 0x06, 0x30, 0xb7, 0xa2, 0x79, 0x9a, 0x35, 0xb4, 0xe4, 0x23, 0x76,
	0x6e, 0xfd, 0x0c, 0x3a, 0x89, 0xfd, 0x9b, 0x04, 0x8d, 0xbf, 0x7d, 0xa1, 0xf7, 0x2c, 0xad, 0x37,
	0xb5, 0xec, 0x33, 0x25, 0xb2, 0x46, 0xd0, 0x9f, 0xbf, 0x4b, 0x92, 0xa8, 0xcc, 0xef, 0x6c, 0x99,
	0x57, 0x92, 0x7a, 0x6f, 0x7c, 0x1a, 0x7b, 0xae, 0x35, 0x06, 0x92, 0xb5, 0x7f, 0x93, 0xa8, 0xae,
	0x43, 0xd3, 0xbc, 0x6e, 0x94, 0x0f, 0x13, 0x14, 0x1c, 0xa7, 0x5e, 0xad, 0x7f, 0x17, 0xa0, 0xf3,
	0x51, 0x3c, 0x66, 0x2f, 0xa8, 0x9c, 0x1c, 0xed, 0x9c, 0xb2, 0x60, 0x39, 0xcd, 0x5b, 0x86, 0xb7,
	0xf3, 0x2f, 0xe3, 0x1c, 0x5f, 0xab, 0x84, 0xa0, 0xae, 0xef, 0x05, 0x9a, 0xdd, 0x1b, 0xb6, 0x19,
	0x11, 0xfb, 0xb2, 0x56, 0x9d, 0xfc, 0x52, 0x90, 0x5f, 0xff, 0xeb, 0xba, 0xb1, 0xfc, 0xb1, 0x08,
	0xed, 0x24, 0x63, 0x2e, 0xdf, 0xf8, 0x2d, 0xe8, 0xa4, 0x37, 0xde, 0xec, 0x2f, 0x80, 0xed, 0x54,
	0x8a, 0xaf, 0xec, 0xdb, 0xd0, 0x9d, 0xdf, 0x9e, 0xb5, 0x5d, 0xc9, 0xfc, 0x8e, 0x96, 0x5c, 0xa1,
	0x3f, 0x31, 0xef, 0x5c, 0xc4, 0xb1, 0x8c, 0x08, 0x69, 0xdc, 0x7e, 0x78, 0x11, 0x9f, 0x0a, 0xe2,
	0xb3, 0xb9, 0x40, 0x01, 0x5f, 0x2b, 0x3c, 0x8f, 0xe1, 0x6a, 0x5a, 0x4f, 0x7a, 0xab, 0x6f, 0x94,
	0x81, 0x5b, 0xff, 0x2c, 0x40, 0x33, 0xf3, 0x34, 0x26, 0x1b, 0xb0, 0x9e, 0xbc, 0x29, 0x1d, 0x7c,
	0xd3, 0x3a, 0xfa, 0x51, 0xdb, 0x5b, 0x21, 0x6b, 0xd0, 0x4b, 0xde, 0xad, 0x8e, 0x79, 0x1a, 0xf6,
	0x0a, 0x64, 0x00, 0x6b, 0xe9, 0x84, 0x03, 0x26, 0x53, 0x4d, 0x91, 0xf4, 0xa1, 0x8d, 0xcf, 0xca,
	0x54, 0x54, 0x22, 0x3d, 0x68, 0x99, 0xe7, 0xa2, 0xa3, 0x5e, 0x75, 0xbd, 0x32, 0x59, 0x45, 0x22,
	0x76, 0xd4, 0x53, 0xd0, 0xd1, 0x6f, 0xc1, 0x5e, 0x85, 0x5c, 0x85, 0xd5, 0x2c, 0x35, 0x3b, 0x36,
	0x13, 0xf1, 0x4c, 0xf6, 0xaa, 0xa4, 0x0e, 0x65, 0x15, 0x65, 0xaf, 0x46, 0x5a, 0x48, 0x82, 0xc8,
	0xfb, 0xbd, 0xba, 0xf2, 0x32, 0x07, 0xd4, 0x51, 0x88, 0xf6, 0x1a, 0x6a, 0xb1, 0xac, 0x97, 0x1e,
	0x6c, 0xff, 0xb5, 0x08, 0xd5, 0x1d, 0x2a, 0xce, 0x1f, 0x7d, 0x4c, 0xee, 0x41, 0x37, 0x64, 0x91,
	0xf0, 0x84, 0x4c, 0xaa, 0x8f, 0xf4, 0x73, 0x65, 0xa3, 0x44, 0xc3, 0x2b, 0x23, 0xfd, 0x0f, 0x80,
	0x51, 0xf2, 0x0f, 0x80, 0xd1, 0x8e, 0x1f, 0xca, 0x73, 0xf2, 0x21, 0xd4, 0x13, 0xfa, 0x23, 0x8b,
	0x8d, 0xc6, 0x30, 0xc7, 0xf0, 0xea, 0x05, 0xb9, 0x39, 0x9f, 0xef, 0x01, 0x4c, 0x99, 0x34, 0x6f,
	0x2f, 0xb2, 0x66, 0xcc, 0x72, 0x64, 0x38, 0x5c, 0x5f, 0x90, 0x9a, 0xa9, 0x8f, 0xa1, 0xab, 0xa6,
	0x66, 0x38, 0x83, 0x0c, 0x2e, 0x44, 0x9d, 0xf8, 0xd8, 0x58, 0xa2, 0x31, 0x7e, 0x1e, 0xc0, 0xc0,
	0x14, 0x88, 0x73, 0x12, 0x8f, 0x99, 0xf3, 0x12, 0xff, 0x61, 0xc1, 0xb0, 0xcc, 0xd6, 0x97, 0x96,
	0xfd, 0x70, 0x31, 0x87, 0xb6, 0x7f, 0x57, 0x80, 0xfe, 0x42, 0x0a, 0xf2, 0x88, 0x7c, 0x1f, 0x6a,
	0xc6, 0x73, 0xba, 0xb3, 0x5c, 0x7d, 0x0c, 0xff, 0x6f, 0x41, 0xba, 0x98, 0xbd, 0x5f, 0x05, 0xda,
	0xed, 0xdf, 0x16, 0xa0, 0xbf, 0x73, 0x26, 0x59, 0x14, 0xd0, 0x59, 0xa2, 0x8c, 0xbe, 0xda, 0x69,
	0x7d, 0x08, 0x3d, 0xea, 0xba, 0x4e, 0xfa, 0x5b, 0xcc, 0x31, 0x1f, 0x93, 0x4b, 0xee, 0x16, 0x17,
	0x30, 0x7a, 0x70, 0xed, 0x27, 0xc3, 0xe4, 0x7f, 0x4c, 0x53, 0xf3, 0x0f, 0xa6, 0xbb, 0xe1, 0xc9,
	0xd4, 0xfc, 0x3f, 0xa9, 0x8a, 0x7f, 0xbe, 0xfd, 0x9f, 0x00, 0x00, 0x00, 0xff, 0xff, 0xfa, 0xb8,
	0xb6, 0xe6, 0x88, 0x1a, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// EasyDLClient is the client API for EasyDL service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type EasyDLClient interface {
	PersistMetrics(ctx context.Context, in *JobMetrics, opts ...grpc.CallOption) (*empty.Empty, error)
	Optimize(ctx context.Context, in *OptimizeRequest, opts ...grpc.CallOption) (*OptimizeResponse, error)
	GetConfig(ctx context.Context, in *ConfigRequest, opts ...grpc.CallOption) (*ConfigResponse, error)
	GetJobMetrics(ctx context.Context, in *JobMetricsRequest, opts ...grpc.CallOption) (*JobMetricsResponse, error)
	ProcessKubeWatchEvent(ctx context.Context, in *KubeWatchEvent, opts ...grpc.CallOption) (*Response, error)
}

type easyDLClient struct {
	cc *grpc.ClientConn
}

func NewEasyDLClient(cc *grpc.ClientConn) EasyDLClient {
	return &easyDLClient{cc}
}

func (c *easyDLClient) PersistMetrics(ctx context.Context, in *JobMetrics, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/proto.EasyDL/persist_metrics", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *easyDLClient) Optimize(ctx context.Context, in *OptimizeRequest, opts ...grpc.CallOption) (*OptimizeResponse, error) {
	out := new(OptimizeResponse)
	err := c.cc.Invoke(ctx, "/proto.EasyDL/optimize", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *easyDLClient) GetConfig(ctx context.Context, in *ConfigRequest, opts ...grpc.CallOption) (*ConfigResponse, error) {
	out := new(ConfigResponse)
	err := c.cc.Invoke(ctx, "/proto.EasyDL/get_config", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *easyDLClient) GetJobMetrics(ctx context.Context, in *JobMetricsRequest, opts ...grpc.CallOption) (*JobMetricsResponse, error) {
	out := new(JobMetricsResponse)
	err := c.cc.Invoke(ctx, "/proto.EasyDL/get_job_metrics", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *easyDLClient) ProcessKubeWatchEvent(ctx context.Context, in *KubeWatchEvent, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/proto.EasyDL/process_kube_watch_event", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// EasyDLServer is the server API for EasyDL service.
type EasyDLServer interface {
	PersistMetrics(context.Context, *JobMetrics) (*empty.Empty, error)
	Optimize(context.Context, *OptimizeRequest) (*OptimizeResponse, error)
	GetConfig(context.Context, *ConfigRequest) (*ConfigResponse, error)
	GetJobMetrics(context.Context, *JobMetricsRequest) (*JobMetricsResponse, error)
	ProcessKubeWatchEvent(context.Context, *KubeWatchEvent) (*Response, error)
}

// UnimplementedEasyDLServer can be embedded to have forward compatible implementations.
type UnimplementedEasyDLServer struct {
}

func (*UnimplementedEasyDLServer) PersistMetrics(ctx context.Context, req *JobMetrics) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PersistMetrics not implemented")
}
func (*UnimplementedEasyDLServer) Optimize(ctx context.Context, req *OptimizeRequest) (*OptimizeResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Optimize not implemented")
}
func (*UnimplementedEasyDLServer) GetConfig(ctx context.Context, req *ConfigRequest) (*ConfigResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetConfig not implemented")
}
func (*UnimplementedEasyDLServer) GetJobMetrics(ctx context.Context, req *JobMetricsRequest) (*JobMetricsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetJobMetrics not implemented")
}
func (*UnimplementedEasyDLServer) ProcessKubeWatchEvent(ctx context.Context, req *KubeWatchEvent) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ProcessKubeWatchEvent not implemented")
}

func RegisterEasyDLServer(s *grpc.Server, srv EasyDLServer) {
	s.RegisterService(&_EasyDL_serviceDesc, srv)
}

func _EasyDL_PersistMetrics_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(JobMetrics)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EasyDLServer).PersistMetrics(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.EasyDL/PersistMetrics",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EasyDLServer).PersistMetrics(ctx, req.(*JobMetrics))
	}
	return interceptor(ctx, in, info, handler)
}

func _EasyDL_Optimize_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(OptimizeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EasyDLServer).Optimize(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.EasyDL/Optimize",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EasyDLServer).Optimize(ctx, req.(*OptimizeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _EasyDL_GetConfig_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ConfigRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EasyDLServer).GetConfig(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.EasyDL/GetConfig",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EasyDLServer).GetConfig(ctx, req.(*ConfigRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _EasyDL_GetJobMetrics_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(JobMetricsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EasyDLServer).GetJobMetrics(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.EasyDL/GetJobMetrics",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EasyDLServer).GetJobMetrics(ctx, req.(*JobMetricsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _EasyDL_ProcessKubeWatchEvent_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(KubeWatchEvent)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EasyDLServer).ProcessKubeWatchEvent(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.EasyDL/ProcessKubeWatchEvent",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EasyDLServer).ProcessKubeWatchEvent(ctx, req.(*KubeWatchEvent))
	}
	return interceptor(ctx, in, info, handler)
}

var _EasyDL_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.EasyDL",
	HandlerType: (*EasyDLServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "persist_metrics",
			Handler:    _EasyDL_PersistMetrics_Handler,
		},
		{
			MethodName: "optimize",
			Handler:    _EasyDL_Optimize_Handler,
		},
		{
			MethodName: "get_config",
			Handler:    _EasyDL_GetConfig_Handler,
		},
		{
			MethodName: "get_job_metrics",
			Handler:    _EasyDL_GetJobMetrics_Handler,
		},
		{
			MethodName: "process_kube_watch_event",
			Handler:    _EasyDL_ProcessKubeWatchEvent_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "dlrover/proto/brain.proto",
}

// OptimizeProcessorClient is the client API for OptimizeProcessor service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type OptimizeProcessorClient interface {
	Process(ctx context.Context, in *OptimizeEvent, opts ...grpc.CallOption) (*OptimizeProcessResponse, error)
	Optimize(ctx context.Context, in *OptimizeRequest, opts ...grpc.CallOption) (*OptimizeResponse, error)
}

type optimizeProcessorClient struct {
	cc *grpc.ClientConn
}

func NewOptimizeProcessorClient(cc *grpc.ClientConn) OptimizeProcessorClient {
	return &optimizeProcessorClient{cc}
}

func (c *optimizeProcessorClient) Process(ctx context.Context, in *OptimizeEvent, opts ...grpc.CallOption) (*OptimizeProcessResponse, error) {
	out := new(OptimizeProcessResponse)
	err := c.cc.Invoke(ctx, "/proto.OptimizeProcessor/process", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *optimizeProcessorClient) Optimize(ctx context.Context, in *OptimizeRequest, opts ...grpc.CallOption) (*OptimizeResponse, error) {
	out := new(OptimizeResponse)
	err := c.cc.Invoke(ctx, "/proto.OptimizeProcessor/optimize", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// OptimizeProcessorServer is the server API for OptimizeProcessor service.
type OptimizeProcessorServer interface {
	Process(context.Context, *OptimizeEvent) (*OptimizeProcessResponse, error)
	Optimize(context.Context, *OptimizeRequest) (*OptimizeResponse, error)
}

// UnimplementedOptimizeProcessorServer can be embedded to have forward compatible implementations.
type UnimplementedOptimizeProcessorServer struct {
}

func (*UnimplementedOptimizeProcessorServer) Process(ctx context.Context, req *OptimizeEvent) (*OptimizeProcessResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Process not implemented")
}
func (*UnimplementedOptimizeProcessorServer) Optimize(ctx context.Context, req *OptimizeRequest) (*OptimizeResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Optimize not implemented")
}

func RegisterOptimizeProcessorServer(s *grpc.Server, srv OptimizeProcessorServer) {
	s.RegisterService(&_OptimizeProcessor_serviceDesc, srv)
}

func _OptimizeProcessor_Process_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(OptimizeEvent)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OptimizeProcessorServer).Process(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.OptimizeProcessor/Process",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OptimizeProcessorServer).Process(ctx, req.(*OptimizeEvent))
	}
	return interceptor(ctx, in, info, handler)
}

func _OptimizeProcessor_Optimize_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(OptimizeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OptimizeProcessorServer).Optimize(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.OptimizeProcessor/Optimize",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OptimizeProcessorServer).Optimize(ctx, req.(*OptimizeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _OptimizeProcessor_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.OptimizeProcessor",
	HandlerType: (*OptimizeProcessorServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "process",
			Handler:    _OptimizeProcessor_Process_Handler,
		},
		{
			MethodName: "optimize",
			Handler:    _OptimizeProcessor_Optimize_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "dlrover/proto/brain.proto",
}

// ExternalOptimizerClient is the client API for ExternalOptimizer service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ExternalOptimizerClient interface {
	Optimize(ctx context.Context, in *OptimizeRequest, opts ...grpc.CallOption) (*OptimizeResponse, error)
	AddTrainingJob(ctx context.Context, in *OptimizeJobMeta, opts ...grpc.CallOption) (*Response, error)
}

type externalOptimizerClient struct {
	cc *grpc.ClientConn
}

func NewExternalOptimizerClient(cc *grpc.ClientConn) ExternalOptimizerClient {
	return &externalOptimizerClient{cc}
}

func (c *externalOptimizerClient) Optimize(ctx context.Context, in *OptimizeRequest, opts ...grpc.CallOption) (*OptimizeResponse, error) {
	out := new(OptimizeResponse)
	err := c.cc.Invoke(ctx, "/proto.ExternalOptimizer/optimize", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *externalOptimizerClient) AddTrainingJob(ctx context.Context, in *OptimizeJobMeta, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/proto.ExternalOptimizer/add_training_job", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ExternalOptimizerServer is the server API for ExternalOptimizer service.
type ExternalOptimizerServer interface {
	Optimize(context.Context, *OptimizeRequest) (*OptimizeResponse, error)
	AddTrainingJob(context.Context, *OptimizeJobMeta) (*Response, error)
}

// UnimplementedExternalOptimizerServer can be embedded to have forward compatible implementations.
type UnimplementedExternalOptimizerServer struct {
}

func (*UnimplementedExternalOptimizerServer) Optimize(ctx context.Context, req *OptimizeRequest) (*OptimizeResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Optimize not implemented")
}
func (*UnimplementedExternalOptimizerServer) AddTrainingJob(ctx context.Context, req *OptimizeJobMeta) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddTrainingJob not implemented")
}

func RegisterExternalOptimizerServer(s *grpc.Server, srv ExternalOptimizerServer) {
	s.RegisterService(&_ExternalOptimizer_serviceDesc, srv)
}

func _ExternalOptimizer_Optimize_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(OptimizeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ExternalOptimizerServer).Optimize(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.ExternalOptimizer/Optimize",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ExternalOptimizerServer).Optimize(ctx, req.(*OptimizeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ExternalOptimizer_AddTrainingJob_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(OptimizeJobMeta)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ExternalOptimizerServer).AddTrainingJob(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.ExternalOptimizer/AddTrainingJob",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ExternalOptimizerServer).AddTrainingJob(ctx, req.(*OptimizeJobMeta))
	}
	return interceptor(ctx, in, info, handler)
}

var _ExternalOptimizer_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.ExternalOptimizer",
	HandlerType: (*ExternalOptimizerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "optimize",
			Handler:    _ExternalOptimizer_Optimize_Handler,
		},
		{
			MethodName: "add_training_job",
			Handler:    _ExternalOptimizer_AddTrainingJob_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "dlrover/proto/brain.proto",
}
